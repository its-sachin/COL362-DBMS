                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=8065.15..8065.15 rows=1 width=37) (actual time=25.343..26.802 rows=1 loops=1)
   Sort Key: drivers.forename, drivers.surname, drivers.nationality
   Sort Method: quicksort  Memory: 25kB
   ->  Nested Loop  (cost=8053.47..8065.14 rows=1 width=37) (actual time=24.749..26.791 rows=1 loops=1)
         ->  Subquery Scan on temp  (cost=8053.19..8056.82 rows=1 width=16) (actual time=24.736..26.778 rows=1 loops=1)
               Filter: (temp.rank = 1)
               Rows Removed by Filter: 1413
               ->  WindowAgg  (cost=8053.19..8055.31 rows=121 width=24) (actual time=24.735..26.733 rows=1414 loops=1)
                     ->  Sort  (cost=8053.19..8053.50 rows=121 width=16) (actual time=24.728..26.250 rows=1414 loops=1)
                           Sort Key: laptimes.milliseconds DESC
                           Sort Method: quicksort  Memory: 115kB
                           ->  Gather  (cost=1027.75..8049.01 rows=121 width=16) (actual time=19.387..25.992 rows=1414 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Hash Join  (cost=27.75..7036.91 rows=50 width=16) (actual time=16.928..21.874 rows=471 loops=3)
                                       Hash Cond: (races.circuitid = circuits.circuitid)
                                       ->  Hash Join  (cost=25.75..7023.93 rows=3970 width=24) (actual time=16.429..21.412 rows=6769 loops=3)
                                             Hash Cond: (laptimes.raceid = races.raceid)
                                             ->  Parallel Seq Scan on laptimes  (cost=0.00..6433.13 rows=214413 width=24) (actual time=0.006..10.927 rows=171531 loops=3)
                                             ->  Hash  (cost=25.50..25.50 rows=20 width=16) (actual time=0.084..0.084 rows=20 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on races  (cost=0.00..25.50 rows=20 width=16) (actual time=0.073..0.081 rows=20 loops=3)
                                                         Filter: (year = 2017)
                                                         Rows Removed by Filter: 1060
                                       ->  Hash  (cost=1.99..1.99 rows=1 width=8) (actual time=0.016..0.017 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on circuits  (cost=0.00..1.99 rows=1 width=8) (actual time=0.009..0.014 rows=1 loops=3)
                                                   Filter: (country = 'Monaco'::text)
                                                   Rows Removed by Filter: 78
         ->  Index Scan using driver_key on drivers  (cost=0.28..8.29 rows=1 width=29) (actual time=0.009..0.009 rows=1 loops=1)
               Index Cond: (driverid = temp.driverid)
 Planning Time: 1.108 ms
 Execution Time: 26.888 ms
(33 rows)

                                                                     QUERY PLAN                                                                      
-----------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=280.17..280.18 rows=5 width=65) (actual time=1.394..1.396 rows=5 loops=1)
   ->  Sort  (cost=280.17..280.72 rows=221 width=65) (actual time=1.394..1.395 rows=5 loops=1)
         Sort Key: (sum(constructorresults.points)) DESC, constructors.name, constructors.nationality, constructors.constructorid
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=273.74..276.50 rows=221 width=65) (actual time=1.381..1.385 rows=12 loops=1)
               Group Key: constructors.constructorid, races.year
               ->  Hash Join  (cost=32.50..272.08 rows=221 width=41) (actual time=1.088..1.349 rows=239 loops=1)
                     Hash Cond: (constructorresults.constructorid = constructors.constructorid)
                     ->  Hash Join  (cost=25.75..264.74 rows=221 width=24) (actual time=1.042..1.273 rows=239 loops=1)
                           Hash Cond: (constructorresults.raceid = races.raceid)
                           ->  Seq Scan on constructorresults  (cost=0.00..207.50 rows=11950 width=24) (actual time=0.003..0.587 rows=11950 loops=1)
                           ->  Hash  (cost=25.50..25.50 rows=20 width=16) (actual time=0.059..0.059 rows=20 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                 ->  Seq Scan on races  (cost=0.00..25.50 rows=20 width=16) (actual time=0.044..0.056 rows=20 loops=1)
                                       Filter: (year = 2012)
                                       Rows Removed by Filter: 1060
                     ->  Hash  (cost=4.11..4.11 rows=211 width=25) (actual time=0.044..0.044 rows=211 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 21kB
                           ->  Seq Scan on constructors  (cost=0.00..4.11 rows=211 width=25) (actual time=0.005..0.020 rows=211 loops=1)
 Planning Time: 0.178 ms
 Execution Time: 1.418 ms
(21 rows)

                                                                         QUERY PLAN                                                                         
------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=885.19..885.20 rows=4 width=53) (actual time=4.432..4.433 rows=1 loops=1)
   Sort Key: drivers.forename, drivers.surname, drivers.driverid
   Sort Method: quicksort  Memory: 25kB
   ->  Hash Join  (cost=866.35..885.15 rows=4 width=53) (actual time=4.348..4.431 rows=1 loops=1)
         Hash Cond: (drivers.driverid = temp.driverid)
         ->  Seq Scan on drivers  (cost=0.00..16.54 rows=854 width=21) (actual time=0.004..0.044 rows=854 loops=1)
         ->  Hash  (cost=866.30..866.30 rows=4 width=40) (actual time=4.342..4.343 rows=1 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 9kB
               ->  Subquery Scan on temp  (cost=840.71..866.30 rows=4 width=40) (actual time=4.285..4.342 rows=1 loops=1)
                     Filter: (temp.rank = 1)
                     Rows Removed by Filter: 112
                     ->  WindowAgg  (cost=840.71..855.64 rows=853 width=48) (actual time=4.284..4.338 rows=113 loops=1)
                           ->  Sort  (cost=840.71..842.85 rows=853 width=40) (actual time=4.281..4.285 rows=113 loops=1)
                                 Sort Key: (sum(results.points)) DESC
                                 Sort Method: quicksort  Memory: 30kB
                                 ->  HashAggregate  (cost=788.52..799.19 rows=853 width=40) (actual time=4.240..4.259 rows=113 loops=1)
                                       Group Key: results.driverid
                                       ->  Hash Join  (cost=32.85..744.78 rows=8749 width=16) (actual time=0.099..3.450 rows=7907 loops=1)
                                             Hash Cond: (results.raceid = races.raceid)
                                             ->  Seq Scan on results  (cost=0.00..644.99 rows=25399 width=24) (actual time=0.002..1.391 rows=25399 loops=1)
                                             ->  Hash  (cost=28.20..28.20 rows=372 width=8) (actual time=0.095..0.095 rows=372 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 23kB
                                                   ->  Seq Scan on races  (cost=0.00..28.20 rows=372 width=8) (actual time=0.003..0.068 rows=372 loops=1)
                                                         Filter: ((year > 2000) AND (year < 2021))
                                                         Rows Removed by Filter: 708
 Planning Time: 0.115 ms
 Execution Time: 4.454 ms
(27 rows)

                                                                           QUERY PLAN                                                                            
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=302.49..302.49 rows=1 width=57) (actual time=1.816..1.817 rows=1 loops=1)
   Sort Key: constructors.name, constructors.nationality, constructors.constructorid
   Sort Method: quicksort  Memory: 25kB
   ->  Nested Loop  (cost=290.48..302.48 rows=1 width=57) (actual time=1.799..1.815 rows=1 loops=1)
         Join Filter: (temp.constructorid = constructors.constructorid)
         Rows Removed by Join Filter: 129
         ->  Subquery Scan on temp  (cost=290.48..295.73 rows=1 width=40) (actual time=1.780..1.796 rows=1 loops=1)
               Filter: (temp.rank = 1)
               Rows Removed by Filter: 19
               ->  WindowAgg  (cost=290.48..293.54 rows=175 width=48) (actual time=1.780..1.794 rows=20 loops=1)
                     ->  Sort  (cost=290.48..290.92 rows=175 width=40) (actual time=1.777..1.779 rows=20 loops=1)
                           Sort Key: (sum(constructorresults.points)) DESC
                           Sort Method: quicksort  Memory: 25kB
                           ->  HashAggregate  (cost=281.77..283.96 rows=175 width=40) (actual time=1.766..1.772 rows=20 loops=1)
                                 Group Key: constructorresults.constructorid
                                 ->  Hash Join  (cost=30.89..269.88 rows=2379 width=16) (actual time=1.100..1.548 rows=2322 loops=1)
                                       Hash Cond: (constructorresults.raceid = races.raceid)
                                       ->  Seq Scan on constructorresults  (cost=0.00..207.50 rows=11950 width=24) (actual time=0.004..0.673 rows=11950 loops=1)
                                       ->  Hash  (cost=28.20..28.20 rows=215 width=8) (actual time=0.078..0.078 rows=215 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 17kB
                                             ->  Seq Scan on races  (cost=0.00..28.20 rows=215 width=8) (actual time=0.019..0.061 rows=215 loops=1)
                                                   Filter: ((year > 2009) AND (year < 2021))
                                                   Rows Removed by Filter: 865
         ->  Seq Scan on constructors  (cost=0.00..4.11 rows=211 width=25) (actual time=0.004..0.010 rows=130 loops=1)
 Planning Time: 0.110 ms
 Execution Time: 1.843 ms
(26 rows)

                                                                 QUERY PLAN                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=791.61..791.62 rows=3 width=29) (actual time=1.755..1.756 rows=1 loops=1)
   Sort Key: drivers.forename, drivers.surname, drivers.driverid
   Sort Method: quicksort  Memory: 25kB
   ->  Nested Loop  (cost=748.57..791.58 rows=3 width=29) (actual time=1.707..1.753 rows=1 loops=1)
         ->  Subquery Scan on temp  (cost=748.30..766.69 rows=3 width=16) (actual time=1.701..1.747 rows=1 loops=1)
               Filter: (temp.rank = 1)
               Rows Removed by Filter: 110
               ->  WindowAgg  (cost=748.30..759.03 rows=613 width=24) (actual time=1.701..1.743 rows=111 loops=1)
                     ->  Sort  (cost=748.30..749.83 rows=613 width=16) (actual time=1.699..1.702 rows=111 loops=1)
                           Sort Key: (count(results.driverid)) DESC
                           Sort Method: quicksort  Memory: 30kB
                           ->  HashAggregate  (cost=713.79..719.92 rows=613 width=16) (actual time=1.674..1.686 rows=111 loops=1)
                                 Group Key: results.driverid
                                 ->  Seq Scan on results  (cost=0.00..708.49 rows=1060 width=8) (actual time=0.008..1.556 rows=1060 loops=1)
                                       Filter: (positionorder = 1)
                                       Rows Removed by Filter: 24339
         ->  Index Scan using driver_key on drivers  (cost=0.28..8.29 rows=1 width=21) (actual time=0.004..0.004 rows=1 loops=1)
               Index Cond: (driverid = temp.driverid)
 Planning Time: 0.107 ms
 Execution Time: 1.780 ms
(20 rows)

                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=417.12..417.12 rows=1 width=25) (actual time=15.067..15.069 rows=1 loops=1)
   Sort Key: constructors.name, temp.constructorid
   Sort Method: quicksort  Memory: 25kB
   ->  Hash Join  (cost=412.43..417.11 rows=1 width=25) (actual time=15.043..15.067 rows=1 loops=1)
         Hash Cond: (constructors.constructorid = temp.constructorid)
         ->  Seq Scan on constructors  (cost=0.00..4.11 rows=211 width=17) (actual time=0.004..0.015 rows=211 loops=1)
         ->  Hash  (cost=412.42..412.42 rows=1 width=16) (actual time=15.035..15.036 rows=1 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 9kB
               ->  Subquery Scan on temp  (cost=412.24..412.42 rows=1 width=16) (actual time=15.016..15.034 rows=1 loops=1)
                     Filter: (temp.rank = 1)
                     Rows Removed by Filter: 44
                     ->  WindowAgg  (cost=412.24..412.35 rows=6 width=24) (actual time=15.015..15.032 rows=45 loops=1)
                           ->  Sort  (cost=412.24..412.26 rows=6 width=16) (actual time=15.013..15.015 rows=45 loops=1)
                                 Sort Key: (count(temp_1.constructorid)) DESC
                                 Sort Method: quicksort  Memory: 27kB
                                 ->  GroupAggregate  (cost=412.06..412.16 rows=6 width=16) (actual time=14.934..15.009 rows=45 loops=1)
                                       Group Key: temp_1.constructorid
                                       ->  Sort  (cost=412.06..412.07 rows=6 width=8) (actual time=14.886..14.920 rows=1036 loops=1)
                                             Sort Key: temp_1.constructorid
                                             Sort Method: quicksort  Memory: 97kB
                                             ->  Subquery Scan on temp_1  (cost=373.14..411.98 rows=6 width=8) (actual time=8.746..14.758 rows=1036 loops=1)
                                                   Filter: (temp_1.rank = 1)
                                                   Rows Removed by Filter: 10914
                                                   ->  WindowAgg  (cost=373.14..397.04 rows=1195 width=56) (actual time=8.745..14.375 rows=11950 loops=1)
                                                         ->  Sort  (cost=373.14..376.13 rows=1195 width=48) (actual time=8.742..9.194 rows=11950 loops=1)
                                                               Sort Key: constructorresults.raceid, (sum(constructorresults.points)) DESC
                                                               Sort Method: quicksort  Memory: 1318kB
                                                               ->  HashAggregate  (cost=297.12..312.06 rows=1195 width=48) (actual time=3.075..5.277 rows=11950 loops=1)
                                                                     Group Key: constructorresults.constructorid, constructorresults.raceid
                                                                     ->  Seq Scan on constructorresults  (cost=0.00..207.50 rows=11950 width=24) (actual time=0.002..0.640 rows=11950 loops=1)
 Planning Time: 0.081 ms
 Execution Time: 15.095 ms
(32 rows)

                                                                                                          QUERY PLAN                                                                                                          
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=5004.75..5004.76 rows=3 width=53) (actual time=21.909..21.912 rows=3 loops=1)
   Sort Key: temp.points DESC, drivers.forename, drivers.surname, drivers.driverid
   Sort Method: quicksort  Memory: 25kB
   ->  Hash Join  (cost=4985.93..5004.73 rows=3 width=53) (actual time=21.826..21.908 rows=3 loops=1)
         Hash Cond: (drivers.driverid = temp.driverid)
         ->  Seq Scan on drivers  (cost=0.00..16.54 rows=854 width=21) (actual time=0.004..0.057 rows=854 loops=1)
         ->  Hash  (cost=4985.90..4985.90 rows=3 width=40) (actual time=21.804..21.806 rows=3 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 9kB
               ->  Subquery Scan on temp  (cost=4985.86..4985.90 rows=3 width=40) (actual time=21.802..21.805 rows=3 loops=1)
                     ->  Limit  (cost=4985.86..4985.87 rows=3 width=48) (actual time=21.801..21.804 rows=3 loops=1)
                           ->  Sort  (cost=4985.86..4987.99 rows=853 width=48) (actual time=21.801..21.803 rows=3 loops=1)
                                 Sort Key: (rank() OVER (?))
                                 Sort Method: top-N heapsort  Memory: 25kB
                                 ->  WindowAgg  (cost=4959.91..4974.83 rows=853 width=48) (actual time=21.314..21.712 rows=820 loops=1)
                                       ->  Sort  (cost=4959.91..4962.04 rows=853 width=40) (actual time=21.304..21.330 rows=820 loops=1)
                                             Sort Key: (sum(results.points)) DESC
                                             Sort Method: quicksort  Memory: 63kB
                                             ->  HashAggregate  (cost=4907.72..4918.38 rows=853 width=40) (actual time=21.086..21.187 rows=820 loops=1)
                                                   Group Key: results.driverid
                                                   ->  Seq Scan on results  (cost=4135.73..4844.22 rows=12700 width=16) (actual time=15.464..18.637 rows=20175 loops=1)
                                                         Filter: (NOT (hashed SubPlan 1))
                                                         Rows Removed by Filter: 5224
                                                         SubPlan 1
                                                           ->  Unique  (cost=4134.86..4135.49 rows=94 width=8) (actual time=15.430..15.456 rows=33 loops=1)
                                                                 ->  Sort  (cost=4134.86..4135.18 rows=127 width=8) (actual time=15.429..15.432 rows=72 loops=1)
                                                                       Sort Key: temp_1.driverid
                                                                       Sort Method: quicksort  Memory: 28kB
                                                                       ->  Subquery Scan on temp_1  (cost=2606.48..4130.42 rows=127 width=8) (actual time=11.226..15.422 rows=72 loops=1)
                                                                             Filter: (temp_1.spoint = temp_1.mpoint)
                                                                             Rows Removed by Filter: 3071
                                                                             ->  WindowAgg  (cost=2606.48..3812.93 rows=25399 width=80) (actual time=11.222..15.214 rows=3143 loops=1)
                                                                                   ->  GroupAggregate  (cost=2606.48..3177.96 rows=25399 width=48) (actual time=11.171..14.280 rows=3143 loops=1)
                                                                                         Group Key: races.year, results_1.driverid
                                                                                         ->  Sort  (cost=2606.48..2669.98 rows=25399 width=24) (actual time=11.167..11.944 rows=25399 loops=1)
                                                                                               Sort Key: races.year, results_1.driverid
                                                                                               Sort Method: quicksort  Memory: 2753kB
                                                                                               ->  Hash Join  (cost=36.30..748.23 rows=25399 width=24) (actual time=0.151..5.386 rows=25399 loops=1)
                                                                                                     Hash Cond: (results_1.raceid = races.raceid)
                                                                                                     ->  Seq Scan on results results_1  (cost=0.00..644.99 rows=25399 width=24) (actual time=0.001..1.666 rows=25399 loops=1)
                                                                                                     ->  Hash  (cost=22.80..22.80 rows=1080 width=16) (actual time=0.148..0.148 rows=1080 loops=1)
                                                                                                           Buckets: 2048  Batches: 1  Memory Usage: 67kB
                                                                                                           ->  Seq Scan on races  (cost=0.00..22.80 rows=1080 width=16) (actual time=0.002..0.072 rows=1080 loops=1)
 Planning Time: 0.173 ms
 Execution Time: 21.947 ms
(44 rows)

                                                                 QUERY PLAN                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=804.42..804.42 rows=1 width=29) (actual time=2.433..2.435 rows=1 loops=1)
   Sort Key: drivers.forename, drivers.surname, drivers.driverid
   Sort Method: quicksort  Memory: 25kB
   CTE countrycount
     ->  HashAggregate  (cost=785.09..787.09 rows=200 width=16) (actual time=2.387..2.398 rows=111 loops=1)
           Group Key: results.driverid
           ->  HashAggregate  (cost=758.59..769.19 rows=1060 width=14) (actual time=2.271..2.325 rows=587 loops=1)
                 Group Key: results.driverid, circuits.country
                 ->  Hash Join  (cost=39.08..753.29 rows=1060 width=14) (actual time=0.171..2.076 rows=1060 loops=1)
                       Hash Cond: (races.circuitid = circuits.circuitid)
                       ->  Hash Join  (cost=36.30..747.58 rows=1060 width=16) (actual time=0.154..1.937 rows=1060 loops=1)
                             Hash Cond: (results.raceid = races.raceid)
                             ->  Seq Scan on results  (cost=0.00..708.49 rows=1060 width=16) (actual time=0.002..1.641 rows=1060 loops=1)
                                   Filter: (positionorder = 1)
                                   Rows Removed by Filter: 24339
                             ->  Hash  (cost=22.80..22.80 rows=1080 width=16) (actual time=0.150..0.151 rows=1080 loops=1)
                                   Buckets: 2048  Batches: 1  Memory Usage: 67kB
                                   ->  Seq Scan on races  (cost=0.00..22.80 rows=1080 width=16) (actual time=0.002..0.074 rows=1080 loops=1)
                       ->  Hash  (cost=1.79..1.79 rows=79 width=14) (actual time=0.015..0.016 rows=79 loops=1)
                             Buckets: 1024  Batches: 1  Memory Usage: 12kB
                             ->  Seq Scan on circuits  (cost=0.00..1.79 rows=79 width=14) (actual time=0.003..0.008 rows=79 loops=1)
   InitPlan 2 (returns $1)
     ->  Aggregate  (cost=4.50..4.51 rows=1 width=8) (actual time=0.031..0.031 rows=1 loops=1)
           ->  CTE Scan on countrycount countrycount_1  (cost=0.00..4.00 rows=200 width=8) (actual time=0.000..0.024 rows=111 loops=1)
   ->  Nested Loop  (cost=0.28..12.81 rows=1 width=29) (actual time=2.430..2.431 rows=1 loops=1)
         ->  CTE Scan on countrycount  (cost=0.00..4.50 rows=1 width=16) (actual time=2.425..2.426 rows=1 loops=1)
               Filter: (num_countries = $1)
               Rows Removed by Filter: 110
         ->  Index Scan using driver_key on drivers  (cost=0.28..8.29 rows=1 width=21) (actual time=0.004..0.004 rows=1 loops=1)
               Index Cond: (driverid = countrycount.driverid)
 Planning Time: 0.187 ms
 Execution Time: 2.462 ms
(32 rows)

                                                                   QUERY PLAN                                                                   
------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=794.35..794.36 rows=3 width=29) (actual time=1.673..1.674 rows=3 loops=1)
   ->  Sort  (cost=794.35..794.46 rows=44 width=29) (actual time=1.673..1.674 rows=3 loops=1)
         Sort Key: temp.num_wins DESC, drivers.forename, drivers.surname, drivers.driverid
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Hash Join  (cost=774.99..793.78 rows=44 width=29) (actual time=1.570..1.662 rows=63 loops=1)
               Hash Cond: (drivers.driverid = temp.driverid)
               ->  Seq Scan on drivers  (cost=0.00..16.54 rows=854 width=21) (actual time=0.003..0.044 rows=854 loops=1)
               ->  Hash  (cost=774.44..774.44 rows=44 width=16) (actual time=1.564..1.564 rows=63 loops=1)
                     Buckets: 1024  Batches: 1  Memory Usage: 11kB
                     ->  Subquery Scan on temp  (cost=773.22..774.44 rows=44 width=16) (actual time=1.512..1.558 rows=63 loops=1)
                           ->  GroupAggregate  (cost=773.22..774.00 rows=44 width=24) (actual time=1.511..1.554 rows=63 loops=1)
                                 Group Key: results.driverid
                                 ->  Sort  (cost=773.22..773.33 rows=45 width=8) (actual time=1.504..1.518 rows=446 loops=1)
                                       Sort Key: results.driverid
                                       Sort Method: quicksort  Memory: 45kB
                                       ->  Seq Scan on results  (cost=0.00..771.99 rows=45 width=8) (actual time=0.002..1.462 rows=446 loops=1)
                                             Filter: ((positionorder = 1) AND (grid = 1))
                                             Rows Removed by Filter: 24953
 Planning Time: 0.064 ms
 Execution Time: 1.688 ms
(20 rows)

                                                                 QUERY PLAN                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=1285.19..1285.20 rows=1 width=66) (actual time=3.224..3.225 rows=1 loops=1)
   Sort Key: drivers.forename, drivers.surname, circuits.name, circuits.circuitid, pitcount.driverid
   Sort Method: quicksort  Memory: 25kB
   CTE pitcount
     ->  GroupAggregate  (cost=1264.94..1266.00 rows=53 width=24) (actual time=3.083..3.160 rows=217 loops=1)
           Group Key: results.raceid, results.driverid
           ->  Sort  (cost=1264.94..1265.07 rows=53 width=24) (actual time=3.080..3.094 rows=422 loops=1)
                 Sort Key: results.raceid, results.driverid
                 Sort Method: quicksort  Memory: 57kB
                 ->  Hash Join  (cost=294.70..1263.42 rows=53 width=24) (actual time=2.705..3.031 rows=422 loops=1)
                       Hash Cond: ((results.raceid = pitstops.raceid) AND (results.driverid = pitstops.driverid))
                       ->  Seq Scan on results  (cost=0.00..708.49 rows=1060 width=16) (actual time=0.004..1.448 rows=1060 loops=1)
                             Filter: (positionorder = 1)
                             Rows Removed by Filter: 24339
                       ->  Hash  (cost=162.28..162.28 rows=8828 width=24) (actual time=1.453..1.453 rows=8828 loops=1)
                             Buckets: 16384  Batches: 1  Memory Usage: 611kB
                             ->  Seq Scan on pitstops  (cost=0.00..162.28 rows=8828 width=24) (actual time=0.003..0.640 rows=8828 loops=1)
   InitPlan 2 (returns $1)
     ->  Aggregate  (cost=1.19..1.20 rows=1 width=8) (actual time=0.118..0.118 rows=1 loops=1)
           ->  CTE Scan on pitcount pitcount_1  (cost=0.00..1.06 rows=53 width=8) (actual time=0.000..0.105 rows=217 loops=1)
   ->  Nested Loop  (cost=0.70..17.99 rows=1 width=66) (actual time=3.210..3.222 rows=1 loops=1)
         ->  Nested Loop  (cost=0.55..17.81 rows=1 width=45) (actual time=3.209..3.221 rows=1 loops=1)
               ->  Nested Loop  (cost=0.28..9.50 rows=1 width=37) (actual time=3.206..3.218 rows=1 loops=1)
                     ->  CTE Scan on pitcount  (cost=0.00..1.19 rows=1 width=24) (actual time=3.202..3.213 rows=1 loops=1)
                           Filter: (stops = $1)
                           Rows Removed by Filter: 216
                     ->  Index Scan using driver_key on drivers  (cost=0.28..8.29 rows=1 width=21) (actual time=0.003..0.003 rows=1 loops=1)
                           Index Cond: (driverid = pitcount.driverid)
               ->  Index Scan using race_key on races  (cost=0.28..8.29 rows=1 width=16) (actual time=0.002..0.002 rows=1 loops=1)
                     Index Cond: (raceid = pitcount.raceid)
         ->  Index Scan using circuit_key on circuits  (cost=0.14..0.17 rows=1 width=29) (actual time=0.001..0.001 rows=1 loops=1)
               Index Cond: (circuitid = races.circuitid)
 Planning Time: 0.260 ms
 Execution Time: 3.252 ms
(34 rows)

                                                                         QUERY PLAN                                                                         
------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=740.23..740.23 rows=1 width=46) (actual time=3.321..3.322 rows=1 loops=1)
   Sort Key: circuits.name, circuits.location, races.raceid
   Sort Method: quicksort  Memory: 25kB
   ->  Nested Loop  (cost=726.61..740.22 rows=1 width=46) (actual time=3.184..3.320 rows=1 loops=1)
         ->  Nested Loop  (cost=726.46..740.05 rows=1 width=24) (actual time=3.182..3.319 rows=1 loops=1)
               ->  Subquery Scan on temp  (cost=726.19..731.74 rows=1 width=16) (actual time=3.178..3.315 rows=1 loops=1)
                     Filter: (temp.rank = 1)
                     Rows Removed by Filter: 345
                     ->  WindowAgg  (cost=726.19..729.42 rows=185 width=24) (actual time=3.178..3.303 rows=346 loops=1)
                           ->  Sort  (cost=726.19..726.65 rows=185 width=16) (actual time=3.175..3.187 rows=346 loops=1)
                                 Sort Key: (count(results.raceid)) DESC
                                 Sort Method: quicksort  Memory: 41kB
                                 ->  HashAggregate  (cost=717.37..719.22 rows=185 width=16) (actual time=3.118..3.148 rows=346 loops=1)
                                       Group Key: results.raceid
                                       ->  Hash Join  (cost=2.73..716.45 rows=185 width=8) (actual time=0.016..3.006 rows=823 loops=1)
                                             Hash Cond: (results.statusid = status.statusid)
                                             ->  Seq Scan on results  (cost=0.00..644.99 rows=25399 width=16) (actual time=0.003..1.271 rows=25399 loops=1)
                                             ->  Hash  (cost=2.71..2.71 rows=1 width=8) (actual time=0.010..0.010 rows=1 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on status  (cost=0.00..2.71 rows=1 width=8) (actual time=0.003..0.009 rows=1 loops=1)
                                                         Filter: (status = 'Collision'::text)
                                                         Rows Removed by Filter: 136
               ->  Index Scan using race_key on races  (cost=0.28..8.29 rows=1 width=16) (actual time=0.003..0.003 rows=1 loops=1)
                     Index Cond: (raceid = temp.raceid)
         ->  Index Scan using circuit_key on circuits  (cost=0.14..0.17 rows=1 width=38) (actual time=0.001..0.001 rows=1 loops=1)
               Index Cond: (circuitid = races.circuitid)
 Planning Time: 0.142 ms
 Execution Time: 3.344 ms
(28 rows)

                                                                                            QUERY PLAN                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=34937.13..34937.13 rows=1 width=29) (actual time=114.394..114.435 rows=1 loops=1)
   Sort Key: drivers.forename, drivers.surname, drivers.driverid
   Sort Method: quicksort  Memory: 25kB
   ->  Nested Loop  (cost=34929.05..34937.12 rows=1 width=29) (actual time=114.385..114.433 rows=1 loops=1)
         ->  Subquery Scan on temp  (cost=34928.77..34928.80 rows=1 width=16) (actual time=114.372..114.420 rows=1 loops=1)
               Filter: (temp.rank = 1)
               Rows Removed by Filter: 13
               ->  WindowAgg  (cost=34928.77..34928.79 rows=1 width=24) (actual time=114.372..114.419 rows=14 loops=1)
                     ->  Sort  (cost=34928.77..34928.78 rows=1 width=16) (actual time=114.369..114.409 rows=14 loops=1)
                           Sort Key: (count(temp_1.driverid)) DESC
                           Sort Method: quicksort  Memory: 25kB
                           ->  GroupAggregate  (cost=34928.74..34928.76 rows=1 width=16) (actual time=114.357..114.406 rows=14 loops=1)
                                 Group Key: temp_1.driverid
                                 ->  Sort  (cost=34928.74..34928.75 rows=1 width=8) (actual time=114.350..114.394 rows=107 loops=1)
                                       Sort Key: temp_1.driverid
                                       Sort Method: quicksort  Memory: 30kB
                                       ->  Subquery Scan on temp_1  (cost=32702.68..34928.73 rows=1 width=8) (actual time=84.819..114.377 rows=107 loops=1)
                                             Filter: ((temp_1.fastestlap = temp_1.fastestinrace) AND (temp_1.positionorder = 1))
                                             Rows Removed by Filter: 6830
                                             ->  WindowAgg  (cost=32702.68..34927.49 rows=83 width=40) (actual time=84.808..114.138 rows=6937 loops=1)
                                                   ->  Gather Merge  (cost=32702.68..34926.24 rows=83 width=32) (actual time=84.799..112.308 rows=6937 loops=1)
                                                         Workers Planned: 2
                                                         Workers Launched: 2
                                                         ->  Merge Join  (cost=31702.66..33916.64 rows=35 width=32) (actual time=77.677..102.179 rows=2312 loops=3)
                                                               Merge Cond: ((laptimes.raceid = results.raceid) AND (laptimes.driverid = results.driverid) AND (laptimes.lap = results.fastestlap))
                                                               ->  Sort  (cost=30550.44..31086.47 rows=214413 width=32) (actual time=74.126..85.649 rows=171526 loops=3)
                                                                     Sort Key: laptimes.raceid, laptimes.driverid, laptimes.lap
                                                                     Sort Method: external merge  Disk: 7856kB
                                                                     Worker 0:  Sort Method: external merge  Disk: 6680kB
                                                                     Worker 1:  Sort Method: external merge  Disk: 6656kB
                                                                     ->  Parallel Seq Scan on laptimes  (cost=0.00..6433.13 rows=214413 width=32) (actual time=0.008..14.158 rows=171531 loops=3)
                                                               ->  Sort  (cost=1152.21..1169.59 rows=6953 width=32) (actual time=3.534..3.795 rows=6953 loops=3)
                                                                     Sort Key: results.raceid, results.driverid, results.fastestlap
                                                                     Sort Method: quicksort  Memory: 736kB
                                                                     Worker 0:  Sort Method: quicksort  Memory: 736kB
                                                                     Worker 1:  Sort Method: quicksort  Memory: 736kB
                                                                     ->  Seq Scan on results  (cost=0.00..708.49 rows=6953 width=32) (actual time=0.015..1.998 rows=6953 loops=3)
                                                                           Filter: (fastestlap <> '-1'::integer)
                                                                           Rows Removed by Filter: 18446
         ->  Index Scan using driver_key on drivers  (cost=0.28..8.29 rows=1 width=21) (actual time=0.010..0.010 rows=1 loops=1)
               Index Cond: (driverid = temp.driverid)
 Planning Time: 0.222 ms
 Execution Time: 115.451 ms
(43 rows)

                                                                                 QUERY PLAN                                                                                  
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=2112.73..2112.74 rows=1 width=74) (actual time=4.838..4.840 rows=1 loops=1)
   Sort Key: constructors1.name, constructors2.name, temp.constructor1_id, temp.constructor2_id
   Sort Method: quicksort  Memory: 25kB
   CTE yearwiserank
     ->  WindowAgg  (cost=1323.59..1562.59 rows=11950 width=56) (actual time=4.063..4.510 rows=919 loops=1)
           ->  Sort  (cost=1323.59..1353.46 rows=11950 width=48) (actual time=4.061..4.092 rows=919 loops=1)
                 Sort Key: races.year, (sum(constructorresults.points)) DESC
                 Sort Method: quicksort  Memory: 96kB
                 ->  HashAggregate  (cost=364.92..514.29 rows=11950 width=48) (actual time=3.647..3.816 rows=919 loops=1)
                       Group Key: races.year, constructorresults.constructorid
                       ->  Hash Join  (cost=36.30..275.29 rows=11950 width=24) (actual time=0.162..2.321 rows=11950 loops=1)
                             Hash Cond: (constructorresults.raceid = races.raceid)
                             ->  Seq Scan on constructorresults  (cost=0.00..207.50 rows=11950 width=24) (actual time=0.003..0.616 rows=11950 loops=1)
                             ->  Hash  (cost=22.80..22.80 rows=1080 width=16) (actual time=0.157..0.157 rows=1080 loops=1)
                                   Buckets: 2048  Batches: 1  Memory Usage: 67kB
                                   ->  Seq Scan on races  (cost=0.00..22.80 rows=1080 width=16) (actual time=0.002..0.075 rows=1080 loops=1)
   ->  Hash Join  (cost=545.22..550.13 rows=1 width=74) (actual time=4.816..4.836 rows=1 loops=1)
         Hash Cond: (constructors2.constructorid = temp.constructor2_id)
         ->  Seq Scan on constructors constructors2  (cost=0.00..4.11 rows=211 width=17) (actual time=0.005..0.014 rows=211 loops=1)
         ->  Hash  (cost=545.21..545.21 rows=1 width=65) (actual time=4.808..4.809 rows=1 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 9kB
               ->  Hash Join  (cost=540.30..545.21 rows=1 width=65) (actual time=4.793..4.803 rows=1 loops=1)
                     Hash Cond: (constructors1.constructorid = temp.constructor1_id)
                     ->  Seq Scan on constructors constructors1  (cost=0.00..4.11 rows=211 width=17) (actual time=0.002..0.011 rows=211 loops=1)
                     ->  Hash  (cost=540.29..540.29 rows=1 width=56) (actual time=4.778..4.779 rows=1 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           ->  Subquery Scan on temp  (cost=539.70..540.29 rows=1 width=56) (actual time=4.745..4.778 rows=1 loops=1)
                                 Filter: (temp.rank = 1)
                                 Rows Removed by Filter: 64
                                 ->  WindowAgg  (cost=539.70..540.06 rows=18 width=64) (actual time=4.744..4.775 rows=65 loops=1)
                                       ->  Sort  (cost=539.70..539.75 rows=18 width=56) (actual time=4.743..4.745 rows=65 loops=1)
                                             Sort Key: ((rank1.points - rank2.points)) DESC
                                             Sort Method: quicksort  Memory: 30kB
                                             ->  Hash Join  (cost=269.62..539.32 rows=18 width=56) (actual time=4.664..4.730 rows=65 loops=1)
                                                   Hash Cond: (rank1.year = rank2.year)
                                                   ->  CTE Scan on yearwiserank rank1  (cost=0.00..268.88 rows=60 width=48) (actual time=4.064..4.115 rows=65 loops=1)
                                                         Filter: (rank = 1)
                                                         Rows Removed by Filter: 854
                                                   ->  Hash  (cost=268.88..268.88 rows=60 width=48) (actual time=0.597..0.597 rows=65 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 12kB
                                                         ->  CTE Scan on yearwiserank rank2  (cost=0.00..268.88 rows=60 width=48) (actual time=0.002..0.590 rows=65 loops=1)
                                                               Filter: (rank = 2)
                                                               Rows Removed by Filter: 854
 Planning Time: 0.186 ms
 Execution Time: 4.892 ms
(45 rows)

                                                                        QUERY PLAN                                                                        
----------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=748.56..748.57 rows=1 width=43) (actual time=1.648..1.649 rows=1 loops=1)
   Sort Key: drivers.forename DESC, drivers.surname, circuits.country, drivers.driverid, circuits.circuitid
   Sort Method: quicksort  Memory: 25kB
   ->  Nested Loop  (cost=738.42..748.55 rows=1 width=43) (actual time=1.639..1.646 rows=1 loops=1)
         ->  Hash Join  (cost=738.15..740.24 rows=1 width=30) (actual time=1.635..1.642 rows=1 loops=1)
               Hash Cond: (circuits.circuitid = temp.circuitid)
               ->  Seq Scan on circuits  (cost=0.00..1.79 rows=79 width=14) (actual time=0.003..0.006 rows=79 loops=1)
               ->  Hash  (cost=738.13..738.13 rows=1 width=24) (actual time=1.629..1.630 rows=1 loops=1)
                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                     ->  Subquery Scan on temp  (cost=737.50..738.13 rows=1 width=24) (actual time=1.618..1.629 rows=1 loops=1)
                           Filter: (temp.rank = 1)
                           Rows Removed by Filter: 20
                           ->  WindowAgg  (cost=737.50..737.87 rows=21 width=32) (actual time=1.618..1.628 rows=21 loops=1)
                                 ->  Sort  (cost=737.50..737.56 rows=21 width=24) (actual time=1.615..1.617 rows=21 loops=1)
                                       Sort Key: results.grid DESC
                                       Sort Method: quicksort  Memory: 26kB
                                       ->  Hash Join  (cost=25.76..737.04 rows=21 width=24) (actual time=1.509..1.612 rows=21 loops=1)
                                             Hash Cond: (results.raceid = races.raceid)
                                             ->  Seq Scan on results  (cost=0.00..708.49 rows=1060 width=24) (actual time=0.003..1.499 rows=1060 loops=1)
                                                   Filter: (positionorder = 1)
                                                   Rows Removed by Filter: 24339
                                             ->  Hash  (cost=25.50..25.50 rows=21 width=16) (actual time=0.057..0.057 rows=21 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on races  (cost=0.00..25.50 rows=21 width=16) (actual time=0.050..0.055 rows=21 loops=1)
                                                         Filter: (year = 2018)
                                                         Rows Removed by Filter: 1059
         ->  Index Scan using driver_key on drivers  (cost=0.28..8.29 rows=1 width=21) (actual time=0.002..0.002 rows=1 loops=1)
               Index Cond: (driverid = temp.driverid)
 Planning Time: 0.184 ms
 Execution Time: 1.667 ms
(30 rows)

                                                                        QUERY PLAN                                                                        
----------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=769.92..769.92 rows=1 width=25) (actual time=2.113..2.114 rows=1 loops=1)
   Sort Key: constructors.name, constructors.constructorid
   Sort Method: quicksort  Memory: 25kB
   ->  Hash Join  (cost=765.23..769.91 rows=1 width=25) (actual time=2.092..2.112 rows=1 loops=1)
         Hash Cond: (constructors.constructorid = temp.constructorid)
         ->  Seq Scan on constructors  (cost=0.00..4.11 rows=211 width=17) (actual time=0.004..0.012 rows=211 loops=1)
         ->  Hash  (cost=765.22..765.22 rows=1 width=16) (actual time=2.087..2.087 rows=1 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 9kB
               ->  Subquery Scan on temp  (cost=758.92..765.22 rows=1 width=16) (actual time=2.073..2.087 rows=1 loops=1)
                     Filter: (temp.rank = 1)
                     Rows Removed by Filter: 29
                     ->  WindowAgg  (cost=758.92..762.60 rows=210 width=24) (actual time=2.072..2.085 rows=30 loops=1)
                           ->  Sort  (cost=758.92..759.45 rows=210 width=16) (actual time=2.070..2.072 rows=30 loops=1)
                                 Sort Key: (count(results.constructorid)) DESC
                                 Sort Method: quicksort  Memory: 26kB
                                 ->  HashAggregate  (cost=748.72..750.82 rows=210 width=16) (actual time=2.063..2.067 rows=30 loops=1)
                                       Group Key: results.constructorid
                                       ->  Hash Join  (cost=30.93..744.70 rows=805 width=8) (actual time=0.098..2.031 rows=283 loops=1)
                                             Hash Cond: (results.raceid = races.raceid)
                                             ->  Seq Scan on results  (cost=0.00..708.49 rows=2004 width=16) (actual time=0.002..1.818 rows=2004 loops=1)
                                                   Filter: (statusid = 5)
                                                   Rows Removed by Filter: 23395
                                             ->  Hash  (cost=25.50..25.50 rows=434 width=8) (actual time=0.094..0.094 rows=434 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 25kB
                                                   ->  Seq Scan on races  (cost=0.00..25.50 rows=434 width=8) (actual time=0.002..0.063 rows=434 loops=1)
                                                         Filter: (year > 1999)
                                                         Rows Removed by Filter: 646
 Planning Time: 0.102 ms
 Execution Time: 2.133 ms
(29 rows)

                                                                  QUERY PLAN                                                                  
----------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=763.66..763.71 rows=5 width=21) (actual time=1.681..1.684 rows=5 loops=1)
   ->  Unique  (cost=763.66..763.96 rows=30 width=21) (actual time=1.680..1.683 rows=5 loops=1)
         ->  Sort  (cost=763.66..763.74 rows=30 width=21) (actual time=1.680..1.681 rows=6 loops=1)
               Sort Key: drivers.forename, drivers.surname, drivers.driverid
               Sort Method: quicksort  Memory: 25kB
               ->  Hash Join  (cost=50.62..762.93 rows=30 width=21) (actual time=0.981..1.672 rows=12 loops=1)
                     Hash Cond: (results.raceid = races.raceid)
                     ->  Hash Join  (cost=20.64..731.92 rows=195 width=29) (actual time=0.818..1.538 rows=33 loops=1)
                           Hash Cond: (results.driverid = drivers.driverid)
                           ->  Seq Scan on results  (cost=0.00..708.49 rows=1060 width=16) (actual time=0.003..1.398 rows=1060 loops=1)
                                 Filter: (positionorder = 1)
                                 Rows Removed by Filter: 24339
                           ->  Hash  (cost=18.68..18.68 rows=157 width=21) (actual time=0.082..0.083 rows=157 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 17kB
                                 ->  Seq Scan on drivers  (cost=0.00..18.68 rows=157 width=21) (actual time=0.004..0.065 rows=157 loops=1)
                                       Filter: (nationality = 'American'::text)
                                       Rows Removed by Filter: 697
                     ->  Hash  (cost=27.93..27.93 rows=164 width=8) (actual time=0.130..0.130 rows=73 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 11kB
                           ->  Hash Join  (cost=2.14..27.93 rows=164 width=8) (actual time=0.015..0.124 rows=73 loops=1)
                                 Hash Cond: (races.circuitid = circuits.circuitid)
                                 ->  Seq Scan on races  (cost=0.00..22.80 rows=1080 width=16) (actual time=0.002..0.052 rows=1080 loops=1)
                                 ->  Hash  (cost=1.99..1.99 rows=12 width=8) (actual time=0.008..0.008 rows=12 loops=1)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on circuits  (cost=0.00..1.99 rows=12 width=8) (actual time=0.003..0.007 rows=12 loops=1)
                                             Filter: (country = 'USA'::text)
                                             Rows Removed by Filter: 67
 Planning Time: 0.219 ms
 Execution Time: 1.699 ms
(29 rows)

                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=1463.34..1463.34 rows=1 width=25) (actual time=3.029..3.030 rows=1 loops=1)
   Sort Key: constructors.name, constructors.constructorid
   Sort Method: quicksort  Memory: 25kB
   ->  Hash Join  (cost=1458.65..1463.33 rows=1 width=25) (actual time=3.020..3.029 rows=1 loops=1)
         Hash Cond: (constructors.constructorid = temp.constructorid)
         ->  Seq Scan on constructors  (cost=0.00..4.11 rows=211 width=17) (actual time=0.003..0.012 rows=211 loops=1)
         ->  Hash  (cost=1458.64..1458.64 rows=1 width=16) (actual time=3.003..3.004 rows=1 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 9kB
               ->  Subquery Scan on temp  (cost=1458.49..1458.64 rows=1 width=16) (actual time=3.000..3.004 rows=1 loops=1)
                     Filter: (temp.rank = 1)
                     Rows Removed by Filter: 3
                     ->  WindowAgg  (cost=1458.49..1458.58 rows=5 width=24) (actual time=3.000..3.003 rows=4 loops=1)
                           ->  Sort  (cost=1458.49..1458.50 rows=5 width=16) (actual time=2.998..2.999 rows=4 loops=1)
                                 Sort Key: (count(result1.constructorid)) DESC
                                 Sort Method: quicksort  Memory: 25kB
                                 ->  GroupAggregate  (cost=1458.34..1458.43 rows=5 width=16) (actual time=2.991..2.997 rows=4 loops=1)
                                       Group Key: result1.constructorid
                                       ->  Sort  (cost=1458.34..1458.36 rows=5 width=8) (actual time=2.989..2.991 rows=58 loops=1)
                                             Sort Key: result1.constructorid
                                             Sort Method: quicksort  Memory: 27kB
                                             ->  Hash Join  (cost=741.80..1458.29 rows=5 width=8) (actual time=2.791..2.983 rows=58 loops=1)
                                                   Hash Cond: ((result1.raceid = races.raceid) AND (result1.constructorid = result2.constructorid))
                                                   ->  Seq Scan on results result1  (cost=0.00..708.49 rows=1060 width=16) (actual time=0.002..1.366 rows=1060 loops=1)
                                                         Filter: (positionorder = 1)
                                                         Rows Removed by Filter: 24339
                                                   ->  Hash  (cost=739.08..739.08 rows=181 width=24) (actual time=1.548..1.549 rows=160 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 17kB
                                                         ->  Hash Join  (cost=27.79..739.08 rows=181 width=24) (actual time=1.331..1.529 rows=160 loops=1)
                                                               Hash Cond: (result2.raceid = races.raceid)
                                                               ->  Seq Scan on results result2  (cost=0.00..708.49 rows=1066 width=16) (actual time=0.002..1.387 rows=1066 loops=1)
                                                                     Filter: (positionorder = 2)
                                                                     Rows Removed by Filter: 24333
                                                               ->  Hash  (cost=25.50..25.50 rows=183 width=8) (actual time=0.069..0.070 rows=183 loops=1)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 16kB
                                                                     ->  Seq Scan on races  (cost=0.00..25.50 rows=183 width=8) (actual time=0.043..0.056 rows=183 loops=1)
                                                                           Filter: (year >= 2014)
                                                                           Rows Removed by Filter: 897
 Planning Time: 0.306 ms
 Execution Time: 3.051 ms
(39 rows)

                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=8087.09..8087.10 rows=1 width=29) (actual time=12.638..14.345 rows=1 loops=1)
   Sort Key: drivers.forename, drivers.surname, drivers.driverid
   Sort Method: quicksort  Memory: 25kB
   ->  Nested Loop  (cost=8075.05..8087.08 rows=1 width=29) (actual time=12.613..14.343 rows=1 loops=1)
         ->  Subquery Scan on temp  (cost=8074.78..8078.77 rows=1 width=16) (actual time=12.607..14.336 rows=1 loops=1)
               Filter: (temp.rank = 1)
               Rows Removed by Filter: 54
               ->  WindowAgg  (cost=8074.78..8077.11 rows=133 width=24) (actual time=12.606..14.333 rows=55 loops=1)
                     ->  Sort  (cost=8074.78..8075.11 rows=133 width=16) (actual time=12.601..14.309 rows=55 loops=1)
                           Sort Key: (count(laptimes.driverid)) DESC
                           Sort Method: quicksort  Memory: 27kB
                           ->  Finalize GroupAggregate  (cost=8036.39..8070.09 rows=133 width=16) (actual time=12.559..14.300 rows=55 loops=1)
                                 Group Key: laptimes.driverid
                                 ->  Gather Merge  (cost=8036.39..8067.43 rows=266 width=16) (actual time=12.553..14.277 rows=126 loops=1)
                                       Workers Planned: 2
                                       Workers Launched: 2
                                       ->  Sort  (cost=7036.37..7036.70 rows=133 width=16) (actual time=11.098..11.100 rows=42 loops=3)
                                             Sort Key: laptimes.driverid
                                             Sort Method: quicksort  Memory: 27kB
                                             Worker 0:  Sort Method: quicksort  Memory: 26kB
                                             Worker 1:  Sort Method: quicksort  Memory: 26kB
                                             ->  Partial HashAggregate  (cost=7030.35..7031.68 rows=133 width=16) (actual time=11.078..11.083 rows=42 loops=3)
                                                   Group Key: laptimes.driverid
                                                   ->  Parallel Seq Scan on laptimes  (cost=0.00..6969.17 rows=12236 width=8) (actual time=0.025..10.175 rows=9711 loops=3)
                                                         Filter: ("position" = 1)
                                                         Rows Removed by Filter: 161820
         ->  Index Scan using driver_key on drivers  (cost=0.28..8.29 rows=1 width=21) (actual time=0.005..0.005 rows=1 loops=1)
               Index Cond: (driverid = temp.driverid)
 Planning Time: 0.068 ms
 Execution Time: 14.370 ms
(30 rows)

                                                                    QUERY PLAN                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=943.50..943.51 rows=4 width=29) (actual time=2.456..2.457 rows=1 loops=1)
   Sort Key: drivers.forename, drivers.surname DESC, drivers.driverid
   Sort Method: quicksort  Memory: 25kB
   ->  Hash Join  (cost=924.66..943.46 rows=4 width=29) (actual time=2.373..2.455 rows=1 loops=1)
         Hash Cond: (drivers.driverid = temp.driverid)
         ->  Seq Scan on drivers  (cost=0.00..16.54 rows=854 width=21) (actual time=0.004..0.044 rows=854 loops=1)
         ->  Hash  (cost=924.61..924.61 rows=4 width=16) (actual time=2.367..2.367 rows=1 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 9kB
               ->  Subquery Scan on temp  (cost=899.59..924.61 rows=4 width=16) (actual time=2.283..2.366 rows=1 loops=1)
                     Filter: (temp.rank = 1)
                     Rows Removed by Filter: 214
                     ->  WindowAgg  (cost=899.59..914.19 rows=834 width=24) (actual time=2.282..2.359 rows=215 loops=1)
                           ->  Sort  (cost=899.59..901.68 rows=834 width=16) (actual time=2.279..2.286 rows=215 loops=1)
                                 Sort Key: (count(results.driverid)) DESC
                                 Sort Method: quicksort  Memory: 35kB
                                 ->  HashAggregate  (cost=850.79..859.13 rows=834 width=16) (actual time=2.237..2.258 rows=215 loops=1)
                                       Group Key: results.driverid
                                       ->  Seq Scan on results  (cost=0.00..835.48 rows=3061 width=8) (actual time=0.003..1.914 rows=3193 loops=1)
                                             Filter: ((positionorder = 1) OR (positionorder = 2) OR (positionorder = 3))
                                             Rows Removed by Filter: 22206
 Planning Time: 0.090 ms
 Execution Time: 2.478 ms
(22 rows)

                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=4162.60..4162.68 rows=31 width=29) (actual time=15.865..15.867 rows=5 loops=1)
   Sort Key: temp.num_champs DESC, drivers.forename, drivers.surname DESC, drivers.driverid
   Sort Method: quicksort  Memory: 25kB
   ->  Hash Join  (cost=4143.04..4161.83 rows=31 width=29) (actual time=15.778..15.862 rows=5 loops=1)
         Hash Cond: (drivers.driverid = temp.driverid)
         ->  Seq Scan on drivers  (cost=0.00..16.54 rows=854 width=21) (actual time=0.003..0.043 rows=854 loops=1)
         ->  Hash  (cost=4142.65..4142.65 rows=31 width=16) (actual time=15.772..15.774 rows=5 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 9kB
               ->  Subquery Scan on temp  (cost=4139.83..4142.65 rows=31 width=16) (actual time=15.758..15.773 rows=5 loops=1)
                     Filter: (temp.rank <= 5)
                     Rows Removed by Filter: 28
                     ->  WindowAgg  (cost=4139.83..4141.48 rows=94 width=24) (actual time=15.757..15.771 rows=33 loops=1)
                           ->  Sort  (cost=4139.83..4140.07 rows=94 width=16) (actual time=15.755..15.757 rows=33 loops=1)
                                 Sort Key: (count(temp_1.driverid)) DESC
                                 Sort Method: quicksort  Memory: 26kB
                                 ->  GroupAggregate  (cost=4134.86..4136.75 rows=94 width=16) (actual time=15.741..15.752 rows=33 loops=1)
                                       Group Key: temp_1.driverid
                                       ->  Sort  (cost=4134.86..4135.18 rows=127 width=8) (actual time=15.739..15.742 rows=72 loops=1)
                                             Sort Key: temp_1.driverid
                                             Sort Method: quicksort  Memory: 28kB
                                             ->  Subquery Scan on temp_1  (cost=2606.48..4130.42 rows=127 width=8) (actual time=11.296..15.731 rows=72 loops=1)
                                                   Filter: (temp_1.spoint = temp_1.mpoint)
                                                   Rows Removed by Filter: 3071
                                                   ->  WindowAgg  (cost=2606.48..3812.93 rows=25399 width=80) (actual time=11.291..15.518 rows=3143 loops=1)
                                                         ->  GroupAggregate  (cost=2606.48..3177.96 rows=25399 width=48) (actual time=11.236..14.550 rows=3143 loops=1)
                                                               Group Key: races.year, results.driverid
                                                               ->  Sort  (cost=2606.48..2669.98 rows=25399 width=24) (actual time=11.232..12.098 rows=25399 loops=1)
                                                                     Sort Key: races.year, results.driverid
                                                                     Sort Method: quicksort  Memory: 2753kB
                                                                     ->  Hash Join  (cost=36.30..748.23 rows=25399 width=24) (actual time=0.162..5.483 rows=25399 loops=1)
                                                                           Hash Cond: (results.raceid = races.raceid)
                                                                           ->  Seq Scan on results  (cost=0.00..644.99 rows=25399 width=24) (actual time=0.002..1.593 rows=25399 loops=1)
                                                                           ->  Hash  (cost=22.80..22.80 rows=1080 width=16) (actual time=0.157..0.158 rows=1080 loops=1)
                                                                                 Buckets: 2048  Batches: 1  Memory Usage: 67kB
                                                                                 ->  Seq Scan on races  (cost=0.00..22.80 rows=1080 width=16) (actual time=0.002..0.076 rows=1080 loops=1)
 Planning Time: 0.132 ms
 Execution Time: 15.893 ms
(37 rows)

