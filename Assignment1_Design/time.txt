                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=8065.15..8065.15 rows=1 width=37) (actual time=25.550..27.033 rows=1 loops=1)
   Sort Key: drivers.forename, drivers.surname, drivers.nationality
   Sort Method: quicksort  Memory: 25kB
   ->  Nested Loop  (cost=8053.47..8065.14 rows=1 width=37) (actual time=24.966..27.023 rows=1 loops=1)
         ->  Subquery Scan on temp  (cost=8053.19..8056.82 rows=1 width=16) (actual time=24.953..27.010 rows=1 loops=1)
               Filter: (temp.rank = 1)
               Rows Removed by Filter: 1413
               ->  WindowAgg  (cost=8053.19..8055.31 rows=121 width=24) (actual time=24.952..26.964 rows=1414 loops=1)
                     ->  Sort  (cost=8053.19..8053.50 rows=121 width=16) (actual time=24.945..26.489 rows=1414 loops=1)
                           Sort Key: laptimes.milliseconds DESC
                           Sort Method: quicksort  Memory: 115kB
                           ->  Gather  (cost=1027.75..8049.01 rows=121 width=16) (actual time=20.084..26.201 rows=1414 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Hash Join  (cost=27.75..7036.91 rows=50 width=16) (actual time=17.880..22.334 rows=471 loops=3)
                                       Hash Cond: (races.circuitid = circuits.circuitid)
                                       ->  Hash Join  (cost=25.75..7023.93 rows=3970 width=24) (actual time=17.368..21.906 rows=6769 loops=3)
                                             Hash Cond: (laptimes.raceid = races.raceid)
                                             ->  Parallel Seq Scan on laptimes  (cost=0.00..6433.13 rows=214413 width=24) (actual time=0.007..11.234 rows=171531 loops=3)
                                             ->  Hash  (cost=25.50..25.50 rows=20 width=16) (actual time=0.066..0.067 rows=20 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on races  (cost=0.00..25.50 rows=20 width=16) (actual time=0.056..0.064 rows=20 loops=3)
                                                         Filter: (year = 2017)
                                                         Rows Removed by Filter: 1060
                                       ->  Hash  (cost=1.99..1.99 rows=1 width=8) (actual time=0.024..0.024 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on circuits  (cost=0.00..1.99 rows=1 width=8) (actual time=0.017..0.021 rows=1 loops=3)
                                                   Filter: (country = 'Monaco'::text)
                                                   Rows Removed by Filter: 78
         ->  Index Scan using driver_key on drivers  (cost=0.28..8.29 rows=1 width=29) (actual time=0.009..0.009 rows=1 loops=1)
               Index Cond: (driverid = temp.driverid)
 Planning Time: 1.008 ms
 Execution Time: 27.118 ms
(33 rows)

                                                                     QUERY PLAN                                                                      
-----------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=280.17..280.18 rows=5 width=65) (actual time=1.478..1.479 rows=5 loops=1)
   ->  Sort  (cost=280.17..280.72 rows=221 width=65) (actual time=1.477..1.478 rows=5 loops=1)
         Sort Key: (sum(constructorresults.points)) DESC, constructors.name, constructors.nationality, constructors.constructorid
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=273.74..276.50 rows=221 width=65) (actual time=1.465..1.469 rows=12 loops=1)
               Group Key: constructors.constructorid, races.year
               ->  Hash Join  (cost=32.50..272.08 rows=221 width=41) (actual time=1.160..1.434 rows=239 loops=1)
                     Hash Cond: (constructorresults.constructorid = constructors.constructorid)
                     ->  Hash Join  (cost=25.75..264.74 rows=221 width=24) (actual time=1.113..1.357 rows=239 loops=1)
                           Hash Cond: (constructorresults.raceid = races.raceid)
                           ->  Seq Scan on constructorresults  (cost=0.00..207.50 rows=11950 width=24) (actual time=0.003..0.629 rows=11950 loops=1)
                           ->  Hash  (cost=25.50..25.50 rows=20 width=16) (actual time=0.060..0.060 rows=20 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                 ->  Seq Scan on races  (cost=0.00..25.50 rows=20 width=16) (actual time=0.046..0.058 rows=20 loops=1)
                                       Filter: (year = 2012)
                                       Rows Removed by Filter: 1060
                     ->  Hash  (cost=4.11..4.11 rows=211 width=25) (actual time=0.045..0.045 rows=211 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 21kB
                           ->  Seq Scan on constructors  (cost=0.00..4.11 rows=211 width=25) (actual time=0.005..0.021 rows=211 loops=1)
 Planning Time: 0.179 ms
 Execution Time: 1.500 ms
(21 rows)

                                                                         QUERY PLAN                                                                         
------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=885.19..885.20 rows=4 width=53) (actual time=4.594..4.595 rows=1 loops=1)
   Sort Key: drivers.forename, drivers.surname, drivers.driverid
   Sort Method: quicksort  Memory: 25kB
   ->  Hash Join  (cost=866.35..885.15 rows=4 width=53) (actual time=4.507..4.593 rows=1 loops=1)
         Hash Cond: (drivers.driverid = temp.driverid)
         ->  Seq Scan on drivers  (cost=0.00..16.54 rows=854 width=21) (actual time=0.004..0.045 rows=854 loops=1)
         ->  Hash  (cost=866.30..866.30 rows=4 width=40) (actual time=4.501..4.501 rows=1 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 9kB
               ->  Subquery Scan on temp  (cost=840.71..866.30 rows=4 width=40) (actual time=4.443..4.501 rows=1 loops=1)
                     Filter: (temp.rank = 1)
                     Rows Removed by Filter: 112
                     ->  WindowAgg  (cost=840.71..855.64 rows=853 width=48) (actual time=4.443..4.496 rows=113 loops=1)
                           ->  Sort  (cost=840.71..842.85 rows=853 width=40) (actual time=4.440..4.444 rows=113 loops=1)
                                 Sort Key: (sum(results.points)) DESC
                                 Sort Method: quicksort  Memory: 30kB
                                 ->  HashAggregate  (cost=788.52..799.19 rows=853 width=40) (actual time=4.399..4.418 rows=113 loops=1)
                                       Group Key: results.driverid
                                       ->  Hash Join  (cost=32.85..744.78 rows=8749 width=16) (actual time=0.100..3.585 rows=7907 loops=1)
                                             Hash Cond: (results.raceid = races.raceid)
                                             ->  Seq Scan on results  (cost=0.00..644.99 rows=25399 width=24) (actual time=0.002..1.480 rows=25399 loops=1)
                                             ->  Hash  (cost=28.20..28.20 rows=372 width=8) (actual time=0.095..0.096 rows=372 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 23kB
                                                   ->  Seq Scan on races  (cost=0.00..28.20 rows=372 width=8) (actual time=0.003..0.068 rows=372 loops=1)
                                                         Filter: ((year > 2000) AND (year < 2021))
                                                         Rows Removed by Filter: 708
 Planning Time: 0.116 ms
 Execution Time: 4.616 ms
(27 rows)

                                                                           QUERY PLAN                                                                            
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=302.49..302.49 rows=1 width=57) (actual time=1.702..1.703 rows=1 loops=1)
   Sort Key: constructors.name, constructors.nationality, constructors.constructorid
   Sort Method: quicksort  Memory: 25kB
   ->  Nested Loop  (cost=290.48..302.48 rows=1 width=57) (actual time=1.688..1.701 rows=1 loops=1)
         Join Filter: (temp.constructorid = constructors.constructorid)
         Rows Removed by Join Filter: 129
         ->  Subquery Scan on temp  (cost=290.48..295.73 rows=1 width=40) (actual time=1.675..1.687 rows=1 loops=1)
               Filter: (temp.rank = 1)
               Rows Removed by Filter: 19
               ->  WindowAgg  (cost=290.48..293.54 rows=175 width=48) (actual time=1.674..1.685 rows=20 loops=1)
                     ->  Sort  (cost=290.48..290.92 rows=175 width=40) (actual time=1.672..1.673 rows=20 loops=1)
                           Sort Key: (sum(constructorresults.points)) DESC
                           Sort Method: quicksort  Memory: 25kB
                           ->  HashAggregate  (cost=281.77..283.96 rows=175 width=40) (actual time=1.663..1.667 rows=20 loops=1)
                                 Group Key: constructorresults.constructorid
                                 ->  Hash Join  (cost=30.89..269.88 rows=2379 width=16) (actual time=1.015..1.441 rows=2322 loops=1)
                                       Hash Cond: (constructorresults.raceid = races.raceid)
                                       ->  Seq Scan on constructorresults  (cost=0.00..207.50 rows=11950 width=24) (actual time=0.004..0.577 rows=11950 loops=1)
                                       ->  Hash  (cost=28.20..28.20 rows=215 width=8) (actual time=0.077..0.077 rows=215 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 17kB
                                             ->  Seq Scan on races  (cost=0.00..28.20 rows=215 width=8) (actual time=0.019..0.061 rows=215 loops=1)
                                                   Filter: ((year > 2009) AND (year < 2021))
                                                   Rows Removed by Filter: 865
         ->  Seq Scan on constructors  (cost=0.00..4.11 rows=211 width=25) (actual time=0.003..0.007 rows=130 loops=1)
 Planning Time: 0.156 ms
 Execution Time: 1.721 ms
(26 rows)

                                                                 QUERY PLAN                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=791.61..791.62 rows=3 width=29) (actual time=1.752..1.752 rows=1 loops=1)
   Sort Key: drivers.forename, drivers.surname, drivers.driverid
   Sort Method: quicksort  Memory: 25kB
   ->  Nested Loop  (cost=748.57..791.58 rows=3 width=29) (actual time=1.704..1.750 rows=1 loops=1)
         ->  Subquery Scan on temp  (cost=748.30..766.69 rows=3 width=16) (actual time=1.699..1.745 rows=1 loops=1)
               Filter: (temp.rank = 1)
               Rows Removed by Filter: 110
               ->  WindowAgg  (cost=748.30..759.03 rows=613 width=24) (actual time=1.699..1.741 rows=111 loops=1)
                     ->  Sort  (cost=748.30..749.83 rows=613 width=16) (actual time=1.696..1.700 rows=111 loops=1)
                           Sort Key: (count(results.driverid)) DESC
                           Sort Method: quicksort  Memory: 30kB
                           ->  HashAggregate  (cost=713.79..719.92 rows=613 width=16) (actual time=1.672..1.684 rows=111 loops=1)
                                 Group Key: results.driverid
                                 ->  Seq Scan on results  (cost=0.00..708.49 rows=1060 width=8) (actual time=0.004..1.555 rows=1060 loops=1)
                                       Filter: (positionorder = 1)
                                       Rows Removed by Filter: 24339
         ->  Index Scan using driver_key on drivers  (cost=0.28..8.29 rows=1 width=21) (actual time=0.004..0.004 rows=1 loops=1)
               Index Cond: (driverid = temp.driverid)
 Planning Time: 0.068 ms
 Execution Time: 1.772 ms
(20 rows)

                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=417.12..417.12 rows=1 width=25) (actual time=14.668..14.669 rows=1 loops=1)
   Sort Key: constructors.name, temp.constructorid
   Sort Method: quicksort  Memory: 25kB
   ->  Hash Join  (cost=412.43..417.11 rows=1 width=25) (actual time=14.645..14.667 rows=1 loops=1)
         Hash Cond: (constructors.constructorid = temp.constructorid)
         ->  Seq Scan on constructors  (cost=0.00..4.11 rows=211 width=17) (actual time=0.004..0.013 rows=211 loops=1)
         ->  Hash  (cost=412.42..412.42 rows=1 width=16) (actual time=14.637..14.638 rows=1 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 9kB
               ->  Subquery Scan on temp  (cost=412.24..412.42 rows=1 width=16) (actual time=14.619..14.637 rows=1 loops=1)
                     Filter: (temp.rank = 1)
                     Rows Removed by Filter: 44
                     ->  WindowAgg  (cost=412.24..412.35 rows=6 width=24) (actual time=14.618..14.635 rows=45 loops=1)
                           ->  Sort  (cost=412.24..412.26 rows=6 width=16) (actual time=14.617..14.619 rows=45 loops=1)
                                 Sort Key: (count(temp_1.constructorid)) DESC
                                 Sort Method: quicksort  Memory: 27kB
                                 ->  GroupAggregate  (cost=412.06..412.16 rows=6 width=16) (actual time=14.534..14.612 rows=45 loops=1)
                                       Group Key: temp_1.constructorid
                                       ->  Sort  (cost=412.06..412.07 rows=6 width=8) (actual time=14.515..14.549 rows=1036 loops=1)
                                             Sort Key: temp_1.constructorid
                                             Sort Method: quicksort  Memory: 97kB
                                             ->  Subquery Scan on temp_1  (cost=373.14..411.98 rows=6 width=8) (actual time=8.305..14.428 rows=1036 loops=1)
                                                   Filter: (temp_1.rank = 1)
                                                   Rows Removed by Filter: 10914
                                                   ->  WindowAgg  (cost=373.14..397.04 rows=1195 width=56) (actual time=8.304..14.031 rows=11950 loops=1)
                                                         ->  Sort  (cost=373.14..376.13 rows=1195 width=48) (actual time=8.301..8.746 rows=11950 loops=1)
                                                               Sort Key: constructorresults.raceid, (sum(constructorresults.points)) DESC
                                                               Sort Method: quicksort  Memory: 1318kB
                                                               ->  HashAggregate  (cost=297.12..312.06 rows=1195 width=48) (actual time=2.896..5.040 rows=11950 loops=1)
                                                                     Group Key: constructorresults.constructorid, constructorresults.raceid
                                                                     ->  Seq Scan on constructorresults  (cost=0.00..207.50 rows=11950 width=24) (actual time=0.003..0.582 rows=11950 loops=1)
 Planning Time: 0.083 ms
 Execution Time: 14.844 ms
(32 rows)

                                                                                                          QUERY PLAN                                                                                                          
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=5004.75..5004.76 rows=3 width=53) (actual time=22.249..22.251 rows=3 loops=1)
   Sort Key: temp.points DESC, drivers.forename, drivers.surname, drivers.driverid
   Sort Method: quicksort  Memory: 25kB
   ->  Hash Join  (cost=4985.93..5004.73 rows=3 width=53) (actual time=22.163..22.248 rows=3 loops=1)
         Hash Cond: (drivers.driverid = temp.driverid)
         ->  Seq Scan on drivers  (cost=0.00..16.54 rows=854 width=21) (actual time=0.004..0.045 rows=854 loops=1)
         ->  Hash  (cost=4985.90..4985.90 rows=3 width=40) (actual time=22.154..22.156 rows=3 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 9kB
               ->  Subquery Scan on temp  (cost=4985.86..4985.90 rows=3 width=40) (actual time=22.151..22.154 rows=3 loops=1)
                     ->  Limit  (cost=4985.86..4985.87 rows=3 width=48) (actual time=22.151..22.153 rows=3 loops=1)
                           ->  Sort  (cost=4985.86..4987.99 rows=853 width=48) (actual time=22.150..22.152 rows=3 loops=1)
                                 Sort Key: (rank() OVER (?))
                                 Sort Method: top-N heapsort  Memory: 25kB
                                 ->  WindowAgg  (cost=4959.91..4974.83 rows=853 width=48) (actual time=21.710..22.076 rows=820 loops=1)
                                       ->  Sort  (cost=4959.91..4962.04 rows=853 width=40) (actual time=21.707..21.734 rows=820 loops=1)
                                             Sort Key: (sum(results.points)) DESC
                                             Sort Method: quicksort  Memory: 63kB
                                             ->  HashAggregate  (cost=4907.72..4918.38 rows=853 width=40) (actual time=21.467..21.581 rows=820 loops=1)
                                                   Group Key: results.driverid
                                                   ->  Seq Scan on results  (cost=4135.73..4844.22 rows=12700 width=16) (actual time=16.138..19.104 rows=20175 loops=1)
                                                         Filter: (NOT (hashed SubPlan 1))
                                                         Rows Removed by Filter: 5224
                                                         SubPlan 1
                                                           ->  Unique  (cost=4134.86..4135.49 rows=94 width=8) (actual time=16.121..16.129 rows=33 loops=1)
                                                                 ->  Sort  (cost=4134.86..4135.18 rows=127 width=8) (actual time=16.121..16.124 rows=72 loops=1)
                                                                       Sort Key: temp_1.driverid
                                                                       Sort Method: quicksort  Memory: 28kB
                                                                       ->  Subquery Scan on temp_1  (cost=2606.48..4130.42 rows=127 width=8) (actual time=11.708..16.113 rows=72 loops=1)
                                                                             Filter: (temp_1.spoint = temp_1.mpoint)
                                                                             Rows Removed by Filter: 3071
                                                                             ->  WindowAgg  (cost=2606.48..3812.93 rows=25399 width=80) (actual time=11.703..15.910 rows=3143 loops=1)
                                                                                   ->  GroupAggregate  (cost=2606.48..3177.96 rows=25399 width=48) (actual time=11.648..14.967 rows=3143 loops=1)
                                                                                         Group Key: races.year, results_1.driverid
                                                                                         ->  Sort  (cost=2606.48..2669.98 rows=25399 width=24) (actual time=11.643..12.492 rows=25399 loops=1)
                                                                                               Sort Key: races.year, results_1.driverid
                                                                                               Sort Method: quicksort  Memory: 2753kB
                                                                                               ->  Hash Join  (cost=36.30..748.23 rows=25399 width=24) (actual time=0.169..5.680 rows=25399 loops=1)
                                                                                                     Hash Cond: (results_1.raceid = races.raceid)
                                                                                                     ->  Seq Scan on results results_1  (cost=0.00..644.99 rows=25399 width=24) (actual time=0.001..1.628 rows=25399 loops=1)
                                                                                                     ->  Hash  (cost=22.80..22.80 rows=1080 width=16) (actual time=0.165..0.166 rows=1080 loops=1)
                                                                                                           Buckets: 2048  Batches: 1  Memory Usage: 67kB
                                                                                                           ->  Seq Scan on races  (cost=0.00..22.80 rows=1080 width=16) (actual time=0.002..0.076 rows=1080 loops=1)
 Planning Time: 0.162 ms
 Execution Time: 22.287 ms
(44 rows)

                                                                 QUERY PLAN                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=804.42..804.42 rows=1 width=29) (actual time=2.337..2.338 rows=1 loops=1)
   Sort Key: drivers.forename, drivers.surname, drivers.driverid
   Sort Method: quicksort  Memory: 25kB
   CTE countrycount
     ->  HashAggregate  (cost=785.09..787.09 rows=200 width=16) (actual time=2.292..2.303 rows=111 loops=1)
           Group Key: results.driverid
           ->  HashAggregate  (cost=758.59..769.19 rows=1060 width=14) (actual time=2.180..2.233 rows=587 loops=1)
                 Group Key: results.driverid, circuits.country
                 ->  Hash Join  (cost=39.08..753.29 rows=1060 width=14) (actual time=0.186..1.984 rows=1060 loops=1)
                       Hash Cond: (races.circuitid = circuits.circuitid)
                       ->  Hash Join  (cost=36.30..747.58 rows=1060 width=16) (actual time=0.167..1.849 rows=1060 loops=1)
                             Hash Cond: (results.raceid = races.raceid)
                             ->  Seq Scan on results  (cost=0.00..708.49 rows=1060 width=16) (actual time=0.002..1.541 rows=1060 loops=1)
                                   Filter: (positionorder = 1)
                                   Rows Removed by Filter: 24339
                             ->  Hash  (cost=22.80..22.80 rows=1080 width=16) (actual time=0.162..0.163 rows=1080 loops=1)
                                   Buckets: 2048  Batches: 1  Memory Usage: 67kB
                                   ->  Seq Scan on races  (cost=0.00..22.80 rows=1080 width=16) (actual time=0.002..0.081 rows=1080 loops=1)
                       ->  Hash  (cost=1.79..1.79 rows=79 width=14) (actual time=0.017..0.017 rows=79 loops=1)
                             Buckets: 1024  Batches: 1  Memory Usage: 12kB
                             ->  Seq Scan on circuits  (cost=0.00..1.79 rows=79 width=14) (actual time=0.004..0.010 rows=79 loops=1)
   InitPlan 2 (returns $1)
     ->  Aggregate  (cost=4.50..4.51 rows=1 width=8) (actual time=0.029..0.030 rows=1 loops=1)
           ->  CTE Scan on countrycount countrycount_1  (cost=0.00..4.00 rows=200 width=8) (actual time=0.000..0.023 rows=111 loops=1)
   ->  Nested Loop  (cost=0.28..12.81 rows=1 width=29) (actual time=2.333..2.334 rows=1 loops=1)
         ->  CTE Scan on countrycount  (cost=0.00..4.50 rows=1 width=16) (actual time=2.328..2.329 rows=1 loops=1)
               Filter: (num_countries = $1)
               Rows Removed by Filter: 110
         ->  Index Scan using driver_key on drivers  (cost=0.28..8.29 rows=1 width=21) (actual time=0.003..0.004 rows=1 loops=1)
               Index Cond: (driverid = countrycount.driverid)
 Planning Time: 0.226 ms
 Execution Time: 2.369 ms
(32 rows)

                                                                   QUERY PLAN                                                                   
------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=794.35..794.36 rows=3 width=29) (actual time=1.623..1.624 rows=3 loops=1)
   ->  Sort  (cost=794.35..794.46 rows=44 width=29) (actual time=1.623..1.624 rows=3 loops=1)
         Sort Key: temp.num_wins DESC, drivers.forename, drivers.surname, drivers.driverid
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Hash Join  (cost=774.99..793.78 rows=44 width=29) (actual time=1.516..1.613 rows=63 loops=1)
               Hash Cond: (drivers.driverid = temp.driverid)
               ->  Seq Scan on drivers  (cost=0.00..16.54 rows=854 width=21) (actual time=0.004..0.050 rows=854 loops=1)
               ->  Hash  (cost=774.44..774.44 rows=44 width=16) (actual time=1.510..1.510 rows=63 loops=1)
                     Buckets: 1024  Batches: 1  Memory Usage: 11kB
                     ->  Subquery Scan on temp  (cost=773.22..774.44 rows=44 width=16) (actual time=1.457..1.503 rows=63 loops=1)
                           ->  GroupAggregate  (cost=773.22..774.00 rows=44 width=24) (actual time=1.456..1.500 rows=63 loops=1)
                                 Group Key: results.driverid
                                 ->  Sort  (cost=773.22..773.33 rows=45 width=8) (actual time=1.448..1.463 rows=446 loops=1)
                                       Sort Key: results.driverid
                                       Sort Method: quicksort  Memory: 45kB
                                       ->  Seq Scan on results  (cost=0.00..771.99 rows=45 width=8) (actual time=0.002..1.406 rows=446 loops=1)
                                             Filter: ((positionorder = 1) AND (grid = 1))
                                             Rows Removed by Filter: 24953
 Planning Time: 0.066 ms
 Execution Time: 1.639 ms
(20 rows)

                                                                 QUERY PLAN                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=1285.19..1285.20 rows=1 width=66) (actual time=3.146..3.147 rows=1 loops=1)
   Sort Key: drivers.forename, drivers.surname, circuits.name, circuits.circuitid, pitcount.driverid
   Sort Method: quicksort  Memory: 25kB
   CTE pitcount
     ->  GroupAggregate  (cost=1264.94..1266.00 rows=53 width=24) (actual time=3.006..3.082 rows=217 loops=1)
           Group Key: results.raceid, results.driverid
           ->  Sort  (cost=1264.94..1265.07 rows=53 width=24) (actual time=3.003..3.017 rows=422 loops=1)
                 Sort Key: results.raceid, results.driverid
                 Sort Method: quicksort  Memory: 57kB
                 ->  Hash Join  (cost=294.70..1263.42 rows=53 width=24) (actual time=2.636..2.956 rows=422 loops=1)
                       Hash Cond: ((results.raceid = pitstops.raceid) AND (results.driverid = pitstops.driverid))
                       ->  Seq Scan on results  (cost=0.00..708.49 rows=1060 width=16) (actual time=0.004..1.398 rows=1060 loops=1)
                             Filter: (positionorder = 1)
                             Rows Removed by Filter: 24339
                       ->  Hash  (cost=162.28..162.28 rows=8828 width=24) (actual time=1.433..1.433 rows=8828 loops=1)
                             Buckets: 16384  Batches: 1  Memory Usage: 611kB
                             ->  Seq Scan on pitstops  (cost=0.00..162.28 rows=8828 width=24) (actual time=0.003..0.633 rows=8828 loops=1)
   InitPlan 2 (returns $1)
     ->  Aggregate  (cost=1.19..1.20 rows=1 width=8) (actual time=0.116..0.116 rows=1 loops=1)
           ->  CTE Scan on pitcount pitcount_1  (cost=0.00..1.06 rows=53 width=8) (actual time=0.000..0.104 rows=217 loops=1)
   ->  Nested Loop  (cost=0.70..17.99 rows=1 width=66) (actual time=3.132..3.144 rows=1 loops=1)
         ->  Nested Loop  (cost=0.55..17.81 rows=1 width=45) (actual time=3.131..3.142 rows=1 loops=1)
               ->  Nested Loop  (cost=0.28..9.50 rows=1 width=37) (actual time=3.128..3.139 rows=1 loops=1)
                     ->  CTE Scan on pitcount  (cost=0.00..1.19 rows=1 width=24) (actual time=3.124..3.135 rows=1 loops=1)
                           Filter: (stops = $1)
                           Rows Removed by Filter: 216
                     ->  Index Scan using driver_key on drivers  (cost=0.28..8.29 rows=1 width=21) (actual time=0.003..0.003 rows=1 loops=1)
                           Index Cond: (driverid = pitcount.driverid)
               ->  Index Scan using race_key on races  (cost=0.28..8.29 rows=1 width=16) (actual time=0.002..0.002 rows=1 loops=1)
                     Index Cond: (raceid = pitcount.raceid)
         ->  Index Scan using circuit_key on circuits  (cost=0.14..0.17 rows=1 width=29) (actual time=0.001..0.001 rows=1 loops=1)
               Index Cond: (circuitid = races.circuitid)
 Planning Time: 0.260 ms
 Execution Time: 3.173 ms
(34 rows)

                                                                         QUERY PLAN                                                                         
------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=740.23..740.23 rows=1 width=46) (actual time=3.262..3.263 rows=1 loops=1)
   Sort Key: circuits.name, circuits.location, races.raceid
   Sort Method: quicksort  Memory: 25kB
   ->  Nested Loop  (cost=726.61..740.22 rows=1 width=46) (actual time=3.127..3.261 rows=1 loops=1)
         ->  Nested Loop  (cost=726.46..740.05 rows=1 width=24) (actual time=3.126..3.259 rows=1 loops=1)
               ->  Subquery Scan on temp  (cost=726.19..731.74 rows=1 width=16) (actual time=3.121..3.255 rows=1 loops=1)
                     Filter: (temp.rank = 1)
                     Rows Removed by Filter: 345
                     ->  WindowAgg  (cost=726.19..729.42 rows=185 width=24) (actual time=3.121..3.244 rows=346 loops=1)
                           ->  Sort  (cost=726.19..726.65 rows=185 width=16) (actual time=3.119..3.130 rows=346 loops=1)
                                 Sort Key: (count(results.raceid)) DESC
                                 Sort Method: quicksort  Memory: 41kB
                                 ->  HashAggregate  (cost=717.37..719.22 rows=185 width=16) (actual time=3.062..3.091 rows=346 loops=1)
                                       Group Key: results.raceid
                                       ->  Hash Join  (cost=2.73..716.45 rows=185 width=8) (actual time=0.016..2.950 rows=823 loops=1)
                                             Hash Cond: (results.statusid = status.statusid)
                                             ->  Seq Scan on results  (cost=0.00..644.99 rows=25399 width=16) (actual time=0.003..1.228 rows=25399 loops=1)
                                             ->  Hash  (cost=2.71..2.71 rows=1 width=8) (actual time=0.010..0.010 rows=1 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on status  (cost=0.00..2.71 rows=1 width=8) (actual time=0.004..0.009 rows=1 loops=1)
                                                         Filter: (status = 'Collision'::text)
                                                         Rows Removed by Filter: 136
               ->  Index Scan using race_key on races  (cost=0.28..8.29 rows=1 width=16) (actual time=0.003..0.003 rows=1 loops=1)
                     Index Cond: (raceid = temp.raceid)
         ->  Index Scan using circuit_key on circuits  (cost=0.14..0.17 rows=1 width=38) (actual time=0.001..0.001 rows=1 loops=1)
               Index Cond: (circuitid = races.circuitid)
 Planning Time: 0.146 ms
 Execution Time: 3.286 ms
(28 rows)

                                                                                            QUERY PLAN                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=34937.13..34937.13 rows=1 width=29) (actual time=109.857..109.896 rows=1 loops=1)
   Sort Key: drivers.forename, drivers.surname, drivers.driverid
   Sort Method: quicksort  Memory: 25kB
   ->  Nested Loop  (cost=34929.05..34937.12 rows=1 width=29) (actual time=109.848..109.894 rows=1 loops=1)
         ->  Subquery Scan on temp  (cost=34928.77..34928.80 rows=1 width=16) (actual time=109.835..109.880 rows=1 loops=1)
               Filter: (temp.rank = 1)
               Rows Removed by Filter: 13
               ->  WindowAgg  (cost=34928.77..34928.79 rows=1 width=24) (actual time=109.834..109.879 rows=14 loops=1)
                     ->  Sort  (cost=34928.77..34928.78 rows=1 width=16) (actual time=109.831..109.870 rows=14 loops=1)
                           Sort Key: (count(temp_1.driverid)) DESC
                           Sort Method: quicksort  Memory: 25kB
                           ->  GroupAggregate  (cost=34928.74..34928.76 rows=1 width=16) (actual time=109.820..109.867 rows=14 loops=1)
                                 Group Key: temp_1.driverid
                                 ->  Sort  (cost=34928.74..34928.75 rows=1 width=8) (actual time=109.812..109.855 rows=107 loops=1)
                                       Sort Key: temp_1.driverid
                                       Sort Method: quicksort  Memory: 30kB
                                       ->  Subquery Scan on temp_1  (cost=32702.68..34928.73 rows=1 width=8) (actual time=80.887..109.838 rows=107 loops=1)
                                             Filter: ((temp_1.fastestlap = temp_1.fastestinrace) AND (temp_1.positionorder = 1))
                                             Rows Removed by Filter: 6830
                                             ->  WindowAgg  (cost=32702.68..34927.49 rows=83 width=40) (actual time=80.876..109.607 rows=6937 loops=1)
                                                   ->  Gather Merge  (cost=32702.68..34926.24 rows=83 width=32) (actual time=80.867..107.755 rows=6937 loops=1)
                                                         Workers Planned: 2
                                                         Workers Launched: 2
                                                         ->  Merge Join  (cost=31702.66..33916.64 rows=35 width=32) (actual time=75.489..99.575 rows=2312 loops=3)
                                                               Merge Cond: ((laptimes.raceid = results.raceid) AND (laptimes.driverid = results.driverid) AND (laptimes.lap = results.fastestlap))
                                                               ->  Sort  (cost=30550.44..31086.47 rows=214413 width=32) (actual time=72.015..83.357 rows=171526 loops=3)
                                                                     Sort Key: laptimes.raceid, laptimes.driverid, laptimes.lap
                                                                     Sort Method: external merge  Disk: 7712kB
                                                                     Worker 0:  Sort Method: external merge  Disk: 6712kB
                                                                     Worker 1:  Sort Method: external merge  Disk: 6768kB
                                                                     ->  Parallel Seq Scan on laptimes  (cost=0.00..6433.13 rows=214413 width=32) (actual time=0.010..13.974 rows=171531 loops=3)
                                                               ->  Sort  (cost=1152.21..1169.59 rows=6953 width=32) (actual time=3.458..3.713 rows=6953 loops=3)
                                                                     Sort Key: results.raceid, results.driverid, results.fastestlap
                                                                     Sort Method: quicksort  Memory: 736kB
                                                                     Worker 0:  Sort Method: quicksort  Memory: 736kB
                                                                     Worker 1:  Sort Method: quicksort  Memory: 736kB
                                                                     ->  Seq Scan on results  (cost=0.00..708.49 rows=6953 width=32) (actual time=0.018..1.950 rows=6953 loops=3)
                                                                           Filter: (fastestlap <> '-1'::integer)
                                                                           Rows Removed by Filter: 18446
         ->  Index Scan using driver_key on drivers  (cost=0.28..8.29 rows=1 width=21) (actual time=0.011..0.011 rows=1 loops=1)
               Index Cond: (driverid = temp.driverid)
 Planning Time: 0.221 ms
 Execution Time: 111.016 ms
(43 rows)

                                                                                 QUERY PLAN                                                                                  
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=2112.73..2112.74 rows=1 width=74) (actual time=5.006..5.008 rows=1 loops=1)
   Sort Key: constructors1.name, constructors2.name, temp.constructor1_id, temp.constructor2_id
   Sort Method: quicksort  Memory: 25kB
   CTE yearwiserank
     ->  WindowAgg  (cost=1323.59..1562.59 rows=11950 width=56) (actual time=4.167..4.631 rows=919 loops=1)
           ->  Sort  (cost=1323.59..1353.46 rows=11950 width=48) (actual time=4.164..4.197 rows=919 loops=1)
                 Sort Key: races.year, (sum(constructorresults.points)) DESC
                 Sort Method: quicksort  Memory: 96kB
                 ->  HashAggregate  (cost=364.92..514.29 rows=11950 width=48) (actual time=3.750..3.912 rows=919 loops=1)
                       Group Key: races.year, constructorresults.constructorid
                       ->  Hash Join  (cost=36.30..275.29 rows=11950 width=24) (actual time=0.165..2.347 rows=11950 loops=1)
                             Hash Cond: (constructorresults.raceid = races.raceid)
                             ->  Seq Scan on constructorresults  (cost=0.00..207.50 rows=11950 width=24) (actual time=0.003..0.616 rows=11950 loops=1)
                             ->  Hash  (cost=22.80..22.80 rows=1080 width=16) (actual time=0.159..0.160 rows=1080 loops=1)
                                   Buckets: 2048  Batches: 1  Memory Usage: 67kB
                                   ->  Seq Scan on races  (cost=0.00..22.80 rows=1080 width=16) (actual time=0.003..0.078 rows=1080 loops=1)
   ->  Hash Join  (cost=545.22..550.13 rows=1 width=74) (actual time=4.984..5.004 rows=1 loops=1)
         Hash Cond: (constructors2.constructorid = temp.constructor2_id)
         ->  Seq Scan on constructors constructors2  (cost=0.00..4.11 rows=211 width=17) (actual time=0.006..0.014 rows=211 loops=1)
         ->  Hash  (cost=545.21..545.21 rows=1 width=65) (actual time=4.975..4.976 rows=1 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 9kB
               ->  Hash Join  (cost=540.30..545.21 rows=1 width=65) (actual time=4.964..4.974 rows=1 loops=1)
                     Hash Cond: (constructors1.constructorid = temp.constructor1_id)
                     ->  Seq Scan on constructors constructors1  (cost=0.00..4.11 rows=211 width=17) (actual time=0.002..0.012 rows=211 loops=1)
                     ->  Hash  (cost=540.29..540.29 rows=1 width=56) (actual time=4.936..4.937 rows=1 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           ->  Subquery Scan on temp  (cost=539.70..540.29 rows=1 width=56) (actual time=4.874..4.935 rows=1 loops=1)
                                 Filter: (temp.rank = 1)
                                 Rows Removed by Filter: 64
                                 ->  WindowAgg  (cost=539.70..540.06 rows=18 width=64) (actual time=4.874..4.932 rows=65 loops=1)
                                       ->  Sort  (cost=539.70..539.75 rows=18 width=56) (actual time=4.872..4.875 rows=65 loops=1)
                                             Sort Key: ((rank1.points - rank2.points)) DESC
                                             Sort Method: quicksort  Memory: 30kB
                                             ->  Hash Join  (cost=269.62..539.32 rows=18 width=56) (actual time=4.790..4.855 rows=65 loops=1)
                                                   Hash Cond: (rank1.year = rank2.year)
                                                   ->  CTE Scan on yearwiserank rank1  (cost=0.00..268.88 rows=60 width=48) (actual time=4.168..4.219 rows=65 loops=1)
                                                         Filter: (rank = 1)
                                                         Rows Removed by Filter: 854
                                                   ->  Hash  (cost=268.88..268.88 rows=60 width=48) (actual time=0.618..0.618 rows=65 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 12kB
                                                         ->  CTE Scan on yearwiserank rank2  (cost=0.00..268.88 rows=60 width=48) (actual time=0.002..0.609 rows=65 loops=1)
                                                               Filter: (rank = 2)
                                                               Rows Removed by Filter: 854
 Planning Time: 0.192 ms
 Execution Time: 5.138 ms
(45 rows)

                                                                        QUERY PLAN                                                                        
----------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=748.56..748.57 rows=1 width=43) (actual time=1.699..1.700 rows=1 loops=1)
   Sort Key: drivers.forename DESC, drivers.surname, circuits.country, drivers.driverid, circuits.circuitid
   Sort Method: quicksort  Memory: 25kB
   ->  Nested Loop  (cost=738.42..748.55 rows=1 width=43) (actual time=1.690..1.697 rows=1 loops=1)
         ->  Hash Join  (cost=738.15..740.24 rows=1 width=30) (actual time=1.686..1.693 rows=1 loops=1)
               Hash Cond: (circuits.circuitid = temp.circuitid)
               ->  Seq Scan on circuits  (cost=0.00..1.79 rows=79 width=14) (actual time=0.003..0.006 rows=79 loops=1)
               ->  Hash  (cost=738.13..738.13 rows=1 width=24) (actual time=1.679..1.679 rows=1 loops=1)
                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                     ->  Subquery Scan on temp  (cost=737.50..738.13 rows=1 width=24) (actual time=1.668..1.679 rows=1 loops=1)
                           Filter: (temp.rank = 1)
                           Rows Removed by Filter: 20
                           ->  WindowAgg  (cost=737.50..737.87 rows=21 width=32) (actual time=1.667..1.677 rows=21 loops=1)
                                 ->  Sort  (cost=737.50..737.56 rows=21 width=24) (actual time=1.665..1.666 rows=21 loops=1)
                                       Sort Key: results.grid DESC
                                       Sort Method: quicksort  Memory: 26kB
                                       ->  Hash Join  (cost=25.76..737.04 rows=21 width=24) (actual time=1.556..1.661 rows=21 loops=1)
                                             Hash Cond: (results.raceid = races.raceid)
                                             ->  Seq Scan on results  (cost=0.00..708.49 rows=1060 width=24) (actual time=0.003..1.548 rows=1060 loops=1)
                                                   Filter: (positionorder = 1)
                                                   Rows Removed by Filter: 24339
                                             ->  Hash  (cost=25.50..25.50 rows=21 width=16) (actual time=0.057..0.057 rows=21 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on races  (cost=0.00..25.50 rows=21 width=16) (actual time=0.049..0.055 rows=21 loops=1)
                                                         Filter: (year = 2018)
                                                         Rows Removed by Filter: 1059
         ->  Index Scan using driver_key on drivers  (cost=0.28..8.29 rows=1 width=21) (actual time=0.003..0.003 rows=1 loops=1)
               Index Cond: (driverid = temp.driverid)
 Planning Time: 0.175 ms
 Execution Time: 1.719 ms
(30 rows)

                                                                        QUERY PLAN                                                                        
----------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=769.92..769.92 rows=1 width=25) (actual time=2.094..2.095 rows=1 loops=1)
   Sort Key: constructors.name, constructors.constructorid
   Sort Method: quicksort  Memory: 25kB
   ->  Hash Join  (cost=765.23..769.91 rows=1 width=25) (actual time=2.073..2.094 rows=1 loops=1)
         Hash Cond: (constructors.constructorid = temp.constructorid)
         ->  Seq Scan on constructors  (cost=0.00..4.11 rows=211 width=17) (actual time=0.004..0.013 rows=211 loops=1)
         ->  Hash  (cost=765.22..765.22 rows=1 width=16) (actual time=2.067..2.068 rows=1 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 9kB
               ->  Subquery Scan on temp  (cost=758.92..765.22 rows=1 width=16) (actual time=2.053..2.067 rows=1 loops=1)
                     Filter: (temp.rank = 1)
                     Rows Removed by Filter: 29
                     ->  WindowAgg  (cost=758.92..762.60 rows=210 width=24) (actual time=2.053..2.065 rows=30 loops=1)
                           ->  Sort  (cost=758.92..759.45 rows=210 width=16) (actual time=2.050..2.052 rows=30 loops=1)
                                 Sort Key: (count(results.constructorid)) DESC
                                 Sort Method: quicksort  Memory: 26kB
                                 ->  HashAggregate  (cost=748.72..750.82 rows=210 width=16) (actual time=2.043..2.046 rows=30 loops=1)
                                       Group Key: results.constructorid
                                       ->  Hash Join  (cost=30.93..744.70 rows=805 width=8) (actual time=0.099..2.011 rows=283 loops=1)
                                             Hash Cond: (results.raceid = races.raceid)
                                             ->  Seq Scan on results  (cost=0.00..708.49 rows=2004 width=16) (actual time=0.003..1.797 rows=2004 loops=1)
                                                   Filter: (statusid = 5)
                                                   Rows Removed by Filter: 23395
                                             ->  Hash  (cost=25.50..25.50 rows=434 width=8) (actual time=0.095..0.095 rows=434 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 25kB
                                                   ->  Seq Scan on races  (cost=0.00..25.50 rows=434 width=8) (actual time=0.002..0.064 rows=434 loops=1)
                                                         Filter: (year > 1999)
                                                         Rows Removed by Filter: 646
 Planning Time: 0.108 ms
 Execution Time: 2.115 ms
(29 rows)

                                                                  QUERY PLAN                                                                  
----------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=763.66..763.71 rows=5 width=21) (actual time=1.681..1.684 rows=5 loops=1)
   ->  Unique  (cost=763.66..763.96 rows=30 width=21) (actual time=1.680..1.683 rows=5 loops=1)
         ->  Sort  (cost=763.66..763.74 rows=30 width=21) (actual time=1.680..1.681 rows=6 loops=1)
               Sort Key: drivers.forename, drivers.surname, drivers.driverid
               Sort Method: quicksort  Memory: 25kB
               ->  Hash Join  (cost=50.62..762.93 rows=30 width=21) (actual time=0.982..1.672 rows=12 loops=1)
                     Hash Cond: (results.raceid = races.raceid)
                     ->  Hash Join  (cost=20.64..731.92 rows=195 width=29) (actual time=0.819..1.538 rows=33 loops=1)
                           Hash Cond: (results.driverid = drivers.driverid)
                           ->  Seq Scan on results  (cost=0.00..708.49 rows=1060 width=16) (actual time=0.003..1.399 rows=1060 loops=1)
                                 Filter: (positionorder = 1)
                                 Rows Removed by Filter: 24339
                           ->  Hash  (cost=18.68..18.68 rows=157 width=21) (actual time=0.082..0.082 rows=157 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 17kB
                                 ->  Seq Scan on drivers  (cost=0.00..18.68 rows=157 width=21) (actual time=0.004..0.065 rows=157 loops=1)
                                       Filter: (nationality = 'American'::text)
                                       Rows Removed by Filter: 697
                     ->  Hash  (cost=27.93..27.93 rows=164 width=8) (actual time=0.130..0.130 rows=73 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 11kB
                           ->  Hash Join  (cost=2.14..27.93 rows=164 width=8) (actual time=0.015..0.124 rows=73 loops=1)
                                 Hash Cond: (races.circuitid = circuits.circuitid)
                                 ->  Seq Scan on races  (cost=0.00..22.80 rows=1080 width=16) (actual time=0.002..0.052 rows=1080 loops=1)
                                 ->  Hash  (cost=1.99..1.99 rows=12 width=8) (actual time=0.008..0.008 rows=12 loops=1)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on circuits  (cost=0.00..1.99 rows=12 width=8) (actual time=0.003..0.007 rows=12 loops=1)
                                             Filter: (country = 'USA'::text)
                                             Rows Removed by Filter: 67
 Planning Time: 0.220 ms
 Execution Time: 1.699 ms
(29 rows)

                                                                               QUERY PLAN                                                                               
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=1547.05..1547.06 rows=1 width=25) (actual time=3.560..3.561 rows=1 loops=1)
   Sort Key: constructors.name, constructors.constructorid
   Sort Method: quicksort  Memory: 25kB
   ->  Hash Join  (cost=1542.37..1547.04 rows=1 width=25) (actual time=3.539..3.559 rows=1 loops=1)
         Hash Cond: (constructors.constructorid = temp.constructorid)
         ->  Seq Scan on constructors  (cost=0.00..4.11 rows=211 width=17) (actual time=0.004..0.012 rows=211 loops=1)
         ->  Hash  (cost=1542.35..1542.35 rows=1 width=16) (actual time=3.533..3.533 rows=1 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 9kB
               ->  Subquery Scan on temp  (cost=1541.39..1542.35 rows=1 width=16) (actual time=3.521..3.532 rows=1 loops=1)
                     Filter: (temp.rank = 1)
                     Rows Removed by Filter: 25
                     ->  WindowAgg  (cost=1541.39..1541.95 rows=32 width=24) (actual time=3.520..3.531 rows=26 loops=1)
                           ->  Sort  (cost=1541.39..1541.47 rows=32 width=16) (actual time=3.518..3.519 rows=26 loops=1)
                                 Sort Key: (count(result1.constructorid)) DESC
                                 Sort Method: quicksort  Memory: 26kB
                                 ->  GroupAggregate  (cost=1523.85..1540.59 rows=32 width=16) (actual time=3.324..3.515 rows=26 loops=1)
                                       Group Key: result1.constructorid
                                       ->  Merge Join  (cost=1523.85..1540.11 rows=32 width=8) (actual time=3.287..3.494 rows=300 loops=1)
                                             Merge Cond: ((result1.constructorid = result2.constructorid) AND (result1.raceid = result2.raceid))
                                             ->  Sort  (cost=761.75..764.40 rows=1060 width=16) (actual time=1.688..1.721 rows=1058 loops=1)
                                                   Sort Key: result1.constructorid, result1.raceid
                                                   Sort Method: quicksort  Memory: 98kB
                                                   ->  Seq Scan on results result1  (cost=0.00..708.49 rows=1060 width=16) (actual time=0.002..1.475 rows=1060 loops=1)
                                                         Filter: (positionorder = 1)
                                                         Rows Removed by Filter: 24339
                                             ->  Sort  (cost=762.10..764.76 rows=1066 width=16) (actual time=1.596..1.630 rows=1066 loops=1)
                                                   Sort Key: result2.constructorid, result2.raceid
                                                   Sort Method: quicksort  Memory: 98kB
                                                   ->  Seq Scan on results result2  (cost=0.00..708.49 rows=1066 width=16) (actual time=0.002..1.384 rows=1066 loops=1)
                                                         Filter: (positionorder = 2)
                                                         Rows Removed by Filter: 24333
 Planning Time: 0.119 ms
 Execution Time: 3.579 ms
(33 rows)

                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=8087.09..8087.10 rows=1 width=29) (actual time=12.325..13.879 rows=1 loops=1)
   Sort Key: drivers.forename, drivers.surname, drivers.driverid
   Sort Method: quicksort  Memory: 25kB
   ->  Nested Loop  (cost=8075.05..8087.08 rows=1 width=29) (actual time=12.298..13.877 rows=1 loops=1)
         ->  Subquery Scan on temp  (cost=8074.78..8078.77 rows=1 width=16) (actual time=12.273..13.851 rows=1 loops=1)
               Filter: (temp.rank = 1)
               Rows Removed by Filter: 54
               ->  WindowAgg  (cost=8074.78..8077.11 rows=133 width=24) (actual time=12.273..13.849 rows=55 loops=1)
                     ->  Sort  (cost=8074.78..8075.11 rows=133 width=16) (actual time=12.269..13.824 rows=55 loops=1)
                           Sort Key: (count(laptimes.driverid)) DESC
                           Sort Method: quicksort  Memory: 27kB
                           ->  Finalize GroupAggregate  (cost=8036.39..8070.09 rows=133 width=16) (actual time=12.229..13.815 rows=55 loops=1)
                                 Group Key: laptimes.driverid
                                 ->  Gather Merge  (cost=8036.39..8067.43 rows=266 width=16) (actual time=12.226..13.800 rows=124 loops=1)
                                       Workers Planned: 2
                                       Workers Launched: 2
                                       ->  Sort  (cost=7036.37..7036.70 rows=133 width=16) (actual time=10.791..10.793 rows=41 loops=3)
                                             Sort Key: laptimes.driverid
                                             Sort Method: quicksort  Memory: 27kB
                                             Worker 0:  Sort Method: quicksort  Memory: 26kB
                                             Worker 1:  Sort Method: quicksort  Memory: 26kB
                                             ->  Partial HashAggregate  (cost=7030.35..7031.68 rows=133 width=16) (actual time=10.771..10.776 rows=41 loops=3)
                                                   Group Key: laptimes.driverid
                                                   ->  Parallel Seq Scan on laptimes  (cost=0.00..6969.17 rows=12236 width=8) (actual time=0.018..9.884 rows=9711 loops=3)
                                                         Filter: ("position" = 1)
                                                         Rows Removed by Filter: 161820
         ->  Index Scan using driver_key on drivers  (cost=0.28..8.29 rows=1 width=21) (actual time=0.004..0.004 rows=1 loops=1)
               Index Cond: (driverid = temp.driverid)
 Planning Time: 0.065 ms
 Execution Time: 13.903 ms
(30 rows)

                                                                    QUERY PLAN                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=943.50..943.51 rows=4 width=29) (actual time=2.421..2.422 rows=1 loops=1)
   Sort Key: drivers.forename, drivers.surname DESC, drivers.driverid
   Sort Method: quicksort  Memory: 25kB
   ->  Hash Join  (cost=924.66..943.46 rows=4 width=29) (actual time=2.338..2.419 rows=1 loops=1)
         Hash Cond: (drivers.driverid = temp.driverid)
         ->  Seq Scan on drivers  (cost=0.00..16.54 rows=854 width=21) (actual time=0.004..0.043 rows=854 loops=1)
         ->  Hash  (cost=924.61..924.61 rows=4 width=16) (actual time=2.331..2.331 rows=1 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 9kB
               ->  Subquery Scan on temp  (cost=899.59..924.61 rows=4 width=16) (actual time=2.248..2.330 rows=1 loops=1)
                     Filter: (temp.rank = 1)
                     Rows Removed by Filter: 214
                     ->  WindowAgg  (cost=899.59..914.19 rows=834 width=24) (actual time=2.248..2.323 rows=215 loops=1)
                           ->  Sort  (cost=899.59..901.68 rows=834 width=16) (actual time=2.245..2.252 rows=215 loops=1)
                                 Sort Key: (count(results.driverid)) DESC
                                 Sort Method: quicksort  Memory: 35kB
                                 ->  HashAggregate  (cost=850.79..859.13 rows=834 width=16) (actual time=2.204..2.224 rows=215 loops=1)
                                       Group Key: results.driverid
                                       ->  Seq Scan on results  (cost=0.00..835.48 rows=3061 width=8) (actual time=0.003..1.884 rows=3193 loops=1)
                                             Filter: ((positionorder = 1) OR (positionorder = 2) OR (positionorder = 3))
                                             Rows Removed by Filter: 22206
 Planning Time: 0.084 ms
 Execution Time: 2.442 ms
(22 rows)

                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=4162.60..4162.68 rows=31 width=29) (actual time=15.309..15.311 rows=5 loops=1)
   Sort Key: temp.num_champs DESC, drivers.forename, drivers.surname DESC, drivers.driverid
   Sort Method: quicksort  Memory: 25kB
   ->  Hash Join  (cost=4143.04..4161.83 rows=31 width=29) (actual time=15.173..15.306 rows=5 loops=1)
         Hash Cond: (drivers.driverid = temp.driverid)
         ->  Seq Scan on drivers  (cost=0.00..16.54 rows=854 width=21) (actual time=0.003..0.090 rows=854 loops=1)
         ->  Hash  (cost=4142.65..4142.65 rows=31 width=16) (actual time=15.167..15.168 rows=5 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 9kB
               ->  Subquery Scan on temp  (cost=4139.83..4142.65 rows=31 width=16) (actual time=15.152..15.167 rows=5 loops=1)
                     Filter: (temp.rank <= 5)
                     Rows Removed by Filter: 28
                     ->  WindowAgg  (cost=4139.83..4141.48 rows=94 width=24) (actual time=15.151..15.165 rows=33 loops=1)
                           ->  Sort  (cost=4139.83..4140.07 rows=94 width=16) (actual time=15.149..15.151 rows=33 loops=1)
                                 Sort Key: (count(temp_1.driverid)) DESC
                                 Sort Method: quicksort  Memory: 26kB
                                 ->  GroupAggregate  (cost=4134.86..4136.75 rows=94 width=16) (actual time=15.136..15.147 rows=33 loops=1)
                                       Group Key: temp_1.driverid
                                       ->  Sort  (cost=4134.86..4135.18 rows=127 width=8) (actual time=15.133..15.136 rows=72 loops=1)
                                             Sort Key: temp_1.driverid
                                             Sort Method: quicksort  Memory: 28kB
                                             ->  Subquery Scan on temp_1  (cost=2606.48..4130.42 rows=127 width=8) (actual time=10.727..15.126 rows=72 loops=1)
                                                   Filter: (temp_1.spoint = temp_1.mpoint)
                                                   Rows Removed by Filter: 3071
                                                   ->  WindowAgg  (cost=2606.48..3812.93 rows=25399 width=80) (actual time=10.722..14.911 rows=3143 loops=1)
                                                         ->  GroupAggregate  (cost=2606.48..3177.96 rows=25399 width=48) (actual time=10.668..13.945 rows=3143 loops=1)
                                                               Group Key: races.year, results.driverid
                                                               ->  Sort  (cost=2606.48..2669.98 rows=25399 width=24) (actual time=10.664..11.493 rows=25399 loops=1)
                                                                     Sort Key: races.year, results.driverid
                                                                     Sort Method: quicksort  Memory: 2753kB
                                                                     ->  Hash Join  (cost=36.30..748.23 rows=25399 width=24) (actual time=0.158..5.181 rows=25399 loops=1)
                                                                           Hash Cond: (results.raceid = races.raceid)
                                                                           ->  Seq Scan on results  (cost=0.00..644.99 rows=25399 width=24) (actual time=0.002..1.465 rows=25399 loops=1)
                                                                           ->  Hash  (cost=22.80..22.80 rows=1080 width=16) (actual time=0.154..0.154 rows=1080 loops=1)
                                                                                 Buckets: 2048  Batches: 1  Memory Usage: 67kB
                                                                                 ->  Seq Scan on races  (cost=0.00..22.80 rows=1080 width=16) (actual time=0.002..0.075 rows=1080 loops=1)
 Planning Time: 0.131 ms
 Execution Time: 15.337 ms
(37 rows)

